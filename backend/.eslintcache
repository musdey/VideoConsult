[{"/home/musdey/Github/VideoConsult/backend/src/app.ts":"1","/home/musdey/Github/VideoConsult/backend/src/controllers/auth.controller.ts":"2","/home/musdey/Github/VideoConsult/backend/src/controllers/pw.controller.ts":"3","/home/musdey/Github/VideoConsult/backend/src/controllers/user.controller.ts":"4","/home/musdey/Github/VideoConsult/backend/src/controllers/verifyMail.controller.ts":"5","/home/musdey/Github/VideoConsult/backend/src/db/connect.ts":"6","/home/musdey/Github/VideoConsult/backend/src/db/disconnect.ts":"7","/home/musdey/Github/VideoConsult/backend/src/db/initalizeRoles.ts":"8","/home/musdey/Github/VideoConsult/backend/src/db/initalizeTestUser.ts":"9","/home/musdey/Github/VideoConsult/backend/src/index.ts":"10","/home/musdey/Github/VideoConsult/backend/src/lib/errors.ts":"11","/home/musdey/Github/VideoConsult/backend/src/lib/generateShortId.ts":"12","/home/musdey/Github/VideoConsult/backend/src/lib/validator.ts":"13","/home/musdey/Github/VideoConsult/backend/src/middleware/authJwt.ts":"14","/home/musdey/Github/VideoConsult/backend/src/middleware/db-not-up.ts":"15","/home/musdey/Github/VideoConsult/backend/src/middleware/verifyBody.ts":"16","/home/musdey/Github/VideoConsult/backend/src/middleware/verifySignup.ts":"17","/home/musdey/Github/VideoConsult/backend/src/models/ResetUserPassword.ts":"18","/home/musdey/Github/VideoConsult/backend/src/models/Role.ts":"19","/home/musdey/Github/VideoConsult/backend/src/models/User.ts":"20","/home/musdey/Github/VideoConsult/backend/src/models/UserLoginOTP.ts":"21","/home/musdey/Github/VideoConsult/backend/src/models/VerifyEmail.ts":"22","/home/musdey/Github/VideoConsult/backend/src/routes/router.ts":"23","/home/musdey/Github/VideoConsult/backend/src/service/mailService.ts":"24","/home/musdey/Github/VideoConsult/backend/src/service/qrCodeService.ts":"25","/home/musdey/Github/VideoConsult/backend/src/service/smsService.ts":"26"},{"size":1550,"mtime":1632489440400,"results":"27","hashOfConfig":"28"},{"size":4358,"mtime":1632490144241,"results":"29","hashOfConfig":"28"},{"size":2608,"mtime":1632489440400,"results":"30","hashOfConfig":"28"},{"size":593,"mtime":1632489440400,"results":"31","hashOfConfig":"28"},{"size":2632,"mtime":1632489440400,"results":"32","hashOfConfig":"28"},{"size":788,"mtime":1632489440400,"results":"33","hashOfConfig":"28"},{"size":191,"mtime":1632489440400,"results":"34","hashOfConfig":"28"},{"size":654,"mtime":1632489440400,"results":"35","hashOfConfig":"28"},{"size":524,"mtime":1632489440400,"results":"36","hashOfConfig":"28"},{"size":293,"mtime":1632489440400,"results":"37","hashOfConfig":"28"},{"size":808,"mtime":1632489440400,"results":"38","hashOfConfig":"28"},{"size":273,"mtime":1632489440400,"results":"39","hashOfConfig":"28"},{"size":1262,"mtime":1632489440400,"results":"40","hashOfConfig":"28"},{"size":1401,"mtime":1632489440400,"results":"41","hashOfConfig":"28"},{"size":447,"mtime":1632489440400,"results":"42","hashOfConfig":"28"},{"size":349,"mtime":1632489440400,"results":"43","hashOfConfig":"28"},{"size":901,"mtime":1632489440400,"results":"44","hashOfConfig":"28"},{"size":815,"mtime":1632489440400,"results":"45","hashOfConfig":"28"},{"size":451,"mtime":1632489440400,"results":"46","hashOfConfig":"28"},{"size":1455,"mtime":1632489440400,"results":"47","hashOfConfig":"28"},{"size":752,"mtime":1632489440400,"results":"48","hashOfConfig":"28"},{"size":779,"mtime":1632489440400,"results":"49","hashOfConfig":"28"},{"size":1340,"mtime":1632489440400,"results":"50","hashOfConfig":"28"},{"size":3125,"mtime":1632489440400,"results":"51","hashOfConfig":"28"},{"size":292,"mtime":1632489440400,"results":"52","hashOfConfig":"28"},{"size":462,"mtime":1632489440400,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":13,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":12,"fixableWarningCount":0,"source":"56"},"b0rhzg",{"filePath":"57","messages":"58","errorCount":45,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":45,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","errorCount":15,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":13,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","errorCount":17,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":17,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","errorCount":28,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":27,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","errorCount":5,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":5,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","errorCount":5,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":5,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","errorCount":13,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":13,"fixableWarningCount":0,"source":"80"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":14,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":14,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":19,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":18,"fixableWarningCount":0,"source":"90"},{"filePath":"91","messages":"92","errorCount":34,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":34,"fixableWarningCount":0,"source":"93"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":4,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":4,"fixableWarningCount":0,"source":"98"},{"filePath":"99","messages":"100","errorCount":15,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":15,"fixableWarningCount":0,"source":"101"},{"filePath":"102","messages":"103","errorCount":7,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":7,"fixableWarningCount":0,"source":"104"},{"filePath":"105","messages":"106","errorCount":4,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":4,"fixableWarningCount":0,"source":"107"},{"filePath":"108","messages":"109","errorCount":18,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":18,"fixableWarningCount":0,"source":"110"},{"filePath":"111","messages":"112","errorCount":4,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":4,"fixableWarningCount":0,"source":"113"},{"filePath":"114","messages":"115","errorCount":3,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":3,"fixableWarningCount":0,"source":"116"},{"filePath":"117","messages":"118","errorCount":19,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":17,"fixableWarningCount":0,"source":"119"},{"filePath":"120","messages":"121","errorCount":30,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":20,"fixableWarningCount":0,"source":"122"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":8,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":8,"fixableWarningCount":0,"source":"127"},"/home/musdey/Github/VideoConsult/backend/src/app.ts",["128","129","130","131","132","133","134","135","136","137","138","139","140"],"import express, { NextFunction, Request, Response } from 'express'\nimport router from './routes/router'\nimport logger from 'morgan'\nimport bodyParser from 'body-parser'\nimport cors from 'cors'\nimport * as dotenv from 'dotenv'\nimport connectDB from './db/connect'\nimport initalizeRoles from './db/initalizeRoles'\nimport initializeTestUser from './db/initalizeTestUser'\n\ndotenv.config()\n\nconst mongodbHost = 'ckd-database'\nconst mongodbUser = process.env.MONGO_NON_ROOT_USERNAME || 'user'\nconst mongodbPw = process.env.MONGO_NON_ROOT_PASSWORD || 'password'\nconst mongodbDBName = process.env.MONGO_INITDB_DATABASE || 'ckd-database'\n\n// Connect mongoose\nconnectDB(mongodbHost, 27017, mongodbUser, mongodbPw, mongodbDBName, 10000)\ninitalizeRoles()\n//initializeTestUser()\n\nconst app = express()\n\n// Setup middleware\napp.use(logger('dev'))\n//app.use(dbNotUp)\napp.use(function (req: Request, res: Response, next: NextFunction) {\n  res.header(\n    \"Access-Control-Allow-Headers\",\n    \"x-access-token, Origin, Content-Type, Accept\"\n  );\n  next();\n});\napp.use(cors())\napp.use(bodyParser.json())\napp.use(bodyParser.urlencoded({ extended: true }))\n\n//app.use(express.static(path.join(__dirname, 'public')))\n\n// Setup routes\napp.use('/api', router)\napp.get('/hi', (req, res) => {\n  res.json({ message: \"Welcome to bezkoder application.\" });\n});\n\n// User.register(new User(testUser), \"test\", function (err: Error, account) {\n//   if (err) {\n//     console.error(err)\n//     return\n//   }\n//   console.log(\"Successfully created testUser\")\n// })\n\n\nexport default app\n","/home/musdey/Github/VideoConsult/backend/src/controllers/auth.controller.ts",["141","142","143","144","145","146","147","148","149","150","151","152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185"],"\nimport jwt from 'jsonwebtoken'\nimport bcrypt from 'bcryptjs'\nimport { Handler, Request, Response } from 'express';\nimport User from '../models/User';\nimport Role from '../models/Role';\nimport { UserValidator, getValidationErrorData } from '../lib/validator'\nimport UserLoginOTP from '../models/UserLoginOTP'\nimport sendSMS from '../service/smsService'\n\nconst secret = process.env.JWT_SECRET || 'test'\nconst EXPIRYTIME = 10 * 60 * 1000 // 10 minutes\n\nconst signup: Handler = async (req: Request, res: Response) => {\n  try {\n\n    const validationResult = await UserValidator.validate(req.body)\n    if (validationResult.length !== 0) {\n      return res.status(400).send(getValidationErrorData(validationResult))\n    }\n\n    const user = new User({\n      email: req.body.email,\n      password: bcrypt.hashSync(req.body.password, 8),\n    });\n\n    const createdUser = await user.save()\n    const userRole = await Role.findOne({ name: \"USER\" })\n    createdUser.role = userRole?._id\n    await createdUser.save()\n    return res.status(200).send({ message: \"User was registered successfully!\" });\n  } catch (err) {\n    return res.status(500).send({ message: err });\n  }\n};\n\nconst signin: Handler = async (req: Request, res: Response) => {\n\n  try {\n    const user = await User.findOne({ email: req.body.email })\n\n    if (!user) {\n      return res.status(404).send({ message: \"User Not found.\" });\n    }\n\n    const passwordIsValid = bcrypt.compareSync(\n      req.body.password,\n      user.password\n    );\n\n    if (!passwordIsValid) {\n      return res.status(401).send({\n        accessToken: null,\n        message: \"Invalid Password!\"\n      });\n    }\n\n    if (user.otpActivated) {\n      await createAndDeliverOTP(user)\n      return res.status(201).send({ message: \"OTP successfully created.\" })\n    }\n    const token = jwt.sign({ id: user.id }, secret, {\n      expiresIn: 86400 // 24 hours\n    });\n    //res.cookie('Token ', token, { httpOnly: true });\n    return res.status(200).send({\n      id: user._id,\n      username: user.username,\n      email: user.email,\n      accessToken: token\n    });\n\n  } catch (err) {\n    return res.status(500).send({ message: err });\n  }\n}\n\nconst requestOTP: Handler = async (req: Request, res: Response) => {\n  try {\n    const user = await User.findOne({ email: req.body.email })\n\n    if (!user) {\n      return res.status(404).send({ message: \"User Not found.\" });\n    }\n\n    const passwordIsValid = bcrypt.compareSync(\n      req.body.password,\n      user.password\n    );\n\n    if (!passwordIsValid) {\n      return res.status(401).send({\n        accessToken: null,\n        message: \"Invalid Password!\"\n      });\n    }\n\n    await createAndDeliverOTP(user)\n\n    return res.status(201).send({ message: \"OTP successfully created.\" })\n\n  } catch (err) {\n    return res.status(500).send({ message: err });\n  }\n}\n\nconst createAndDeliverOTP = async (user: any) => {\n  const oneTimePwPin = Math.floor(100000 + Math.random() * 900000).toString()\n  const userOTPObj = new UserLoginOTP({ email: user.email, otp: oneTimePwPin, timestamp: Date.now(), otpExpires: Date.now() + EXPIRYTIME })\n  const result = await userOTPObj.save()\n  console.log(result)\n  await sendSMS(user.email, user.phoneNumber, oneTimePwPin)\n}\n\nconst signinWithOTP: Handler = async (req: Request, res: Response) => {\n\n  try {\n    const user = await User.findOne({ email: req.body.email })\n\n    if (!user) {\n      return res.status(404).send({ message: \"User Not found.\" });\n    }\n\n    const passwordIsValid = bcrypt.compareSync(\n      req.body.password,\n      user.password\n    );\n\n    if (!passwordIsValid) {\n      return res.status(401).send({\n        accessToken: null,\n        message: \"Invalid Password!\"\n      });\n    }\n    const otp = await UserLoginOTP.findOne({ email: req.body.email, otpExpires: { $gt: new Date() } })\n    if (!otp || otp.otp !== req.body.otp) {\n      return res.status(401).send({ message: \"OTP not found or incorrect\" })\n    }\n\n    const token = jwt.sign({ id: user.id }, secret, {\n      expiresIn: 86400 // 24 hours\n    });\n\n    otp.otpExpires = new Date()\n    await otp.save()\n    return res.status(200).send({\n      id: user._id,\n      username: user.username,\n      email: user.email,\n      accessToken: token\n    });\n\n  } catch (err) {\n    return res.status(500).send({ message: err });\n\n  }\n\n}\n\nexport { signin, signup, signinWithOTP, requestOTP }","/home/musdey/Github/VideoConsult/backend/src/controllers/pw.controller.ts",["186","187","188","189","190","191","192","193","194","195","196","197","198","199","200"],"import { Handler, Request, Response } from 'express';\nimport User from '../models/User';\nimport crypto from 'crypto'\nimport errors from '../lib/errors';\nimport ResetUserPassword from '../models/ResetUserPassword';\nimport sendMail from '../service/mailService';\nimport bcrypt from 'bcryptjs'\n\nconst EXPIRYTIME = 60 * 60 * 1000 // 1 hours\n\nconst passwordResetRequest: Handler = async (req: Request, res: Response) => {\n  const email = req.params.email\n\n  if (!email) {\n    return res.status(400).send({ message: 'E-Mail address missing.', error: errors.InputMissing })\n  }\n\n  const user = await User.findOne({ email: email })\n\n  if (!user) {\n    return res.status(404).send({ message: 'No user with given E-mail found.', error: errors.BadRequest })\n  }\n\n  const token = await crypto.randomBytes(50).toString('hex')\n\n  try {\n    const newResetPW = new ResetUserPassword({\n      email: email,\n      time: Date.now(),\n      resetPasswordExpires: Date.now() + EXPIRYTIME,\n      resetPasswordToken: token,\n    })\n\n    const result = await newResetPW.save()\n\n    await sendMail(user.username || user.firstName, email, token, MailType.RESETPW)\n\n    res.status(200).end('Successfully requested new password')\n    return\n  } catch (err) {\n    return res.status(500).send({ message: err });\n  }\n\n}\n\nconst passwordResetCheckToken: Handler = async (req, res) => {\n  if (!req.params.token) {\n    res.status(400).end('Request invalid')\n  }\n  const restPW = await ResetUserPassword.findOne({\n    resetPasswordToken: req.params.token,\n    resetPasswordExpires: { $gt: new Date() },\n  })\n  if (!restPW) {\n    res.status(400).end('Password reset token is invalid or has expired.')\n    return\n  }\n\n  res.status(200).end('Token valid')\n  return\n}\n\nconst passwordReset: Handler = async (req, res) => {\n  const data = await req.body()\n  if (!data.token || !data.password) {\n    return res.status(400).send({ message: 'Token or password missing.', error: errors.InputMissing })\n  }\n\n  const resetPassword = await ResetUserPassword.findOne({ resetPasswordToken: data.token })\n  if (!resetPassword) {\n    return res.status(404).send({ message: 'No PW request with this token found', error: errors.BadRequest })\n  }\n\n  try {\n    const user = await User.findOne({ email: resetPassword.email })\n    if (user) {\n      user.password = bcrypt.hashSync(req.body.password, 8)\n      await user.save()\n    }\n    return res.status(200).send({ message: \"New password has been set successfully.\" })\n  } catch (err) {\n    return res.status(500).send({ message: err });\n  }\n}\n\n\nexport { passwordReset, passwordResetRequest, passwordResetCheckToken }\n","/home/musdey/Github/VideoConsult/backend/src/controllers/user.controller.ts",["201","202","203","204","205","206","207","208","209","210","211","212","213","214","215","216","217"],"import { Handler, Request, Response } from \"express\";\n\nconst allAccess: Handler = (req: Request, res: Response) => {\n  return res.status(200).send(\"Public Content.\");\n};\n\nconst userBoard: Handler = (req: Request, res: Response) => {\n  return res.status(200).json({ \"data\": \"user\" }).end();\n};\n\nconst adminBoard: Handler = (req: Request, res: Response) => {\n  return res.status(200).send(\"Admin Content.\");\n};\n\nconst moderatorBoard: Handler = (req: Request, res: Response) => {\n  return res.status(200).send(\"Moderator Content.\");\n};\n\nexport { allAccess, userBoard, adminBoard, moderatorBoard }","/home/musdey/Github/VideoConsult/backend/src/controllers/verifyMail.controller.ts",["218","219","220","221","222","223","224","225","226","227","228","229","230","231","232","233","234","235","236","237","238","239","240","241","242","243","244","245"],"\nimport { Handler, Request, Response } from 'express';\nimport User from '../models/User';\nimport errors from '../lib/errors';\nimport VerifyMail from '../models/VerifyEmail';\nimport crypto from 'crypto'\n\nconst secret = process.env.JWT_SECRET || \"test\"\nconst serverURL = process.env.SERVER_URL || \"http://localhost\"\nconst validTime = 24 * 60 * 60 * 1000 // 24 hours\n\nconst requestEmailVerification: Handler = async (req: Request, res: Response) => {\n\n  try {\n    const user = await User.findOne({ email: req.body.email })\n    if (!user) {\n      return res.status(404).send({ message: \"User Not found.\", error: errors.NotFound });\n    }\n\n    const verifyEmailRequest = await VerifyMail.findOne({ email: req.body.email })\n    const token = crypto.randomBytes(50).toString('hex');\n    const timestamp = new Date()\n    if (!verifyEmailRequest) {\n      const newVerifyEmailRequest = new VerifyMail({ email: req.body.email, token, timestamp })\n      await newVerifyEmailRequest.save()\n      const verifyEmailURL = serverURL + \"/api/verifyEmail?token=\" + token\n      console.log(`URL to verify the email of ${user.email} is ${verifyEmailURL}`)\n\n      return res.status(200).send({ message: \"Email was sent successfully.\" })\n    }\n    verifyEmailRequest.token = token\n    verifyEmailRequest.timestamp = timestamp\n    await verifyEmailRequest.save()\n    return res.status(200).send({ message: \"Email was sent successfully.\" })\n  } catch (err) {\n    return res.status(500).send({ message: err });\n  }\n}\n\nconst verifyMail = async (req: Request, res: Response) => {\n\n  const requestedToken = req.params.token\n  if (!requestedToken) {\n    return res.status(401).send({ message: \"Token missing.\", error: errors.InputMissing })\n  }\n\n  try {\n    const verifyEmailRequest = await VerifyMail.findOne({ token: requestedToken })\n\n    if (!verifyEmailRequest) {\n      return res.status(404).send({ message: \"Request not found\", error: errors.NotFound });\n    }\n\n    const user = await User.findOne({ email: verifyEmailRequest.email })\n    if (!user) {\n      return res.status(404).send({ message: \"User Not found.\", error: errors.NotFound });\n    }\n    //substract 24hours\n    if (verifyEmailRequest.timestamp.getTime() <= (Date.now() - validTime)) {\n      user.emailIsVerified = true\n      await user.save()\n      return res.status(200).send({ message: \"Email address successfully verified.\" })\n    } else {\n      return res.status(200).send({ message: \"This request timed out. Please request a new E-mail verifaction.\" })\n    }\n\n  } catch (err) {\n    return res.status(500).send({ message: err });\n  }\n};\n\nexport { requestEmailVerification, verifyMail }","/home/musdey/Github/VideoConsult/backend/src/db/connect.ts",["246","247"],"import mongoose from 'mongoose'\n\n/**\n *\n * @param defaultTimeoutForQuery in MS\n */\nconst connect = async (\n  host: string,\n  port: number,\n  username?: string,\n  password?: string,\n  database?: string,\n  defaultTimeoutForQuery?: number\n): Promise<void> => {\n\n  let connectionString = `mongodb://${username}:${password}@${host}:${port}/${database}`\n  if (process.env.NODE_ENV === \"production\") {\n    connectionString = `mongodb://${username}:${password}@${host}:${port}/${database}`\n  }\n  try {\n    await mongoose.connect(\n      connectionString,\n      {\n        useNewUrlParser: true,\n        useUnifiedTopology: true\n      }\n    )\n    console.log(`[Mongoose] Connected to ${host}:${port}/${database}`)\n  } catch (err) {\n    console.log(`[Mongoose] ${err}`)\n  }\n}\n\nexport default connect\n","/home/musdey/Github/VideoConsult/backend/src/db/disconnect.ts",["248","249","250","251","252"],"import mongoose from 'mongoose'\n\nconst disconnect = async () => {\n\n  const database = mongoose.connection\n  if (database) {\n    await mongoose.disconnect();\n  }\n\n};\n\nexport default disconnect","/home/musdey/Github/VideoConsult/backend/src/db/initalizeRoles.ts",["253","254","255","256","257"],"\nimport Role from '../models/Role'\n\nconst initalizeRoles = async function () {\n  try {\n    const result = await Role.estimatedDocumentCount()\n    if (result === 0) {\n      await createRoles()\n      console.log(\"Roles are created initially\")\n    }\n  } catch (err) {\n    await createRoles()\n  }\n}\n\nconst createRoles = async function () {\n  const userRole = new Role({ name: \"USER\" })\n  const moderatorRole = new Role({ name: \"MODERATOR\" })\n  const adminRole = new Role({ name: \"ADMIN\" })\n\n  try {\n    await userRole.save()\n    await moderatorRole.save()\n    await adminRole.save()\n  } catch (err) {\n    console.log(err)\n  }\n}\n\nexport default initalizeRoles","/home/musdey/Github/VideoConsult/backend/src/db/initalizeTestUser.ts",["258","259","260","261","262","263","264","265","266","267","268","269","270"],"import User from \"../models/User\"\n\nconst initializeTestUser = async function () {\n\n  const testUser = new User({\n    email: \"test@User.at\",\n    firstName: \"Test\",\n    lastName: \"User\",\n    username: \"testUser\",\n    role: \"USER\",\n    phoneNumber: \"0123456\",\n    address: {\n      city: \"Vienna\",\n      postalCode: 1010,\n      street: \"Stadtplatz\",\n      streetNumber: \"1\",\n      streetExtra: \"Top1\"\n    }\n  })\n\n  try {\n    await testUser.save()\n  } catch (err) {\n    console.log(err)\n  }\n\n}\n\nexport default initializeTestUser\n","/home/musdey/Github/VideoConsult/backend/src/index.ts",[],"/home/musdey/Github/VideoConsult/backend/src/lib/errors.ts",["271","272","273","274","275","276","277","278","279","280","281","282","283","284"],"interface ResponseError {\n  code: String\n  title: String\n  message?: String\n}\n\nconst BadRequest: ResponseError = { code: \"400\", title: \"Bad request\" }\nconst NotFound: ResponseError = { code: \"404\", title: \"Resource not found\" }\nconst Unauthorized: ResponseError = { code: \"401\", title: \"User is not authorized\" }\nconst WrongPassword: ResponseError = { code: \"401\", title: \"Wrong password\" }\nconst Forbidden: ResponseError = { code: \"403\", title: \"User is not allowed to access this resourced\" }\nconst InternalServer: ResponseError = { code: \"500\", title: \"Internal server error\" }\nconst InputMissing: ResponseError = { code: \"401\", title: 'Wrong or missing parameters' }\n\n\nconst errors = {\n  NotFound, Unauthorized, Forbidden, InternalServer, BadRequest, WrongPassword, InputMissing\n}\n\nexport default errors\n","/home/musdey/Github/VideoConsult/backend/src/lib/generateShortId.ts",[],"/home/musdey/Github/VideoConsult/backend/src/lib/validator.ts",["285","286","287","288","289","290","291","292","293","294","295","296","297","298","299","300","301","302","303"],"import Validator, { ValidationError } from 'validate'\nimport InputValidationError from './errors'\n\nconst UserValidator: Validator = new Validator({\n  //_id let it autogenerate by mongodb\n  username: {\n    type: String,\n  },\n  firstName: {\n    type: String,\n  },\n  lastName: {\n    type: String,\n  },\n  password: {\n    type: String,\n    required: true,\n  },\n  email: {\n    type: String,\n    required: true,\n  },\n  phoneNumber: {\n    type: String,\n  },\n  address: {\n    city: {\n      type: String,\n    },\n    zip: {\n      type: Number,\n    },\n    street: {\n      type: String,\n    },\n    streetNumber: {\n      type: String,\n    },\n    streetExtra: {\n      type: String,\n    },\n  },\n})\n\nconst LoginValidator = new Validator({\n  email: {\n    type: String,\n    required: true,\n  },\n  password: {\n    type: String,\n    required: true,\n  },\n})\n\nconst getValidationErrorData = function (validationResult: ValidationError[]): string {\n  const resultArr: string[] = []\n  validationResult.forEach((err) => {\n    resultArr.push(err.toString())\n  })\n  const result = { error: resultArr }\n  if (process.env.NODE_ENV === 'development') {\n    return result.toString()\n  }\n  return 'InputValidationError'\n}\n\nexport {\n  LoginValidator,\n  UserValidator,\n  getValidationErrorData,\n}\n","/home/musdey/Github/VideoConsult/backend/src/middleware/authJwt.ts",["304","305","306","307","308","309","310","311","312","313","314","315","316","317","318","319","320","321","322","323","324","325","326","327","328","329","330","331","332","333","334","335","336","337"],"import jwt from \"jsonwebtoken\"\nimport User from \"../models/User\"\nimport { NextFunction, Response } from \"express\";\n\nconst secret = process.env.JWT_SECRET || \"test\"\n\nconst verifyToken = (req: any, res: Response, next: NextFunction) => {\n  let token = req.headers.authorization;\n\n  if (!token) {\n    res.status(403).send({ message: \"No token provided!\" });\n    return\n  }\n  token = token.split(' ')[1]\n\n  jwt.verify(token, secret, (err: any, decoded: any) => {\n    if (err) {\n      return res.status(401).send({ message: \"Unauthorized!\" });\n    }\n    req.userId = decoded.id;\n    next();\n  });\n};\n\nconst isAdmin = async (req: any, res: Response, next: NextFunction) => {\n  const IUser = await User.findById(req.userId).exec()\n  if (!IUser) {\n    res.status(500).send({ message: \"User not found!\" });\n    return;\n  }\n\n  if (IUser.role === \"ADMIN\") {\n    next()\n  } else {\n    res.status(403).send({ message: \"Require Admin Role!\" });\n    return\n  }\n};\n\nconst isModerator = async (req: any, res: Response, next: NextFunction) => {\n  const IUser = await User.findById(req.userId).exec()\n  if (!IUser) {\n    res.status(500).send({ message: \"User not found!\" });\n    return;\n  }\n\n  if (IUser.role === \"MODERATOR\") {\n    next()\n  } else {\n    res.status(403).send({ message: \"Require Moderator Role!\" });\n    return\n  }\n};\n\nconst authJwt = {\n  verifyToken,\n  isAdmin,\n  isModerator,\n};\nexport default authJwt;","/home/musdey/Github/VideoConsult/backend/src/middleware/db-not-up.ts",[],"/home/musdey/Github/VideoConsult/backend/src/middleware/verifyBody.ts",["338","339","340","341"],"import { NextFunction, Request, Response } from \"express\"\nimport errors from \"../lib/errors\"\n\nconst verifyBody = async (req: Request, res: Response, next: NextFunction) => {\n\n  const body = await req.body\n  if (!body || Object.keys(body).length === 0) {\n    return res.status(400).send(errors.InputMissing)\n  }\n\n  next()\n}\n\nexport default verifyBody","/home/musdey/Github/VideoConsult/backend/src/middleware/verifySignup.ts",["342","343","344","345","346","347","348","349","350","351","352","353","354","355","356"],"import { NextFunction, Request, Response } from 'express';\nimport User from '../models/User'\n\nconst checkDuplicateUsernameOrEmail = (req: Request, res: Response, next: NextFunction) => {\n\n  // // Username\n  // User.findOne({\n  //   username: req.body.username\n  // }).exec((err, user) => {\n  //   if (err) {\n  //     res.status(500).send({ message: err });\n  //     return;\n  //   }\n\n  //   if (user) {\n  //     res.status(400).send({ message: \"Failed! Username is already in use!\" });\n  //     return;\n  //   }\n\n  // Email\n  User.findOne({\n    email: req.body.email\n  }).exec((err, user) => {\n    if (err) {\n      res.status(500).send({ message: err });\n      return;\n    }\n\n    if (user) {\n      res.status(400).send({ message: \"Failed! Email is already in use!\" });\n      return;\n    }\n\n    next();\n  });\n};\n\n\nconst verifySignUp = {\n  checkDuplicateUsernameOrEmail,\n};\n\nexport default verifySignUp;","/home/musdey/Github/VideoConsult/backend/src/models/ResetUserPassword.ts",["357","358","359","360","361","362","363"],"import { Schema, Model, Document, model } from 'mongoose'\n\ninterface IResetUserPassword extends Document {\n  email: string\n  timestamp: Date\n  resetPasswordExpires: Date\n  resetPasswordToken: string\n  updated: boolean\n}\n\nconst ResetUserPasswordSchema = new Schema(\n  {\n    //_id let it autogenerate by mongodb\n    email: {\n      type: String,\n      required: true,\n    },\n    time: {\n      type: Date,\n      default: new Date(),\n    },\n    resetPasswordExpires: {\n      type: Date,\n      required: true,\n    },\n    resetPasswordToken: {\n      type: String,\n      required: true,\n    },\n    updated: {\n      type: Boolean,\n    },\n  },\n  { strict: false, versionKey: false }\n)\n\nconst ResetUserPassword: Model<IResetUserPassword> = model('ResetUserPassword', ResetUserPasswordSchema)\n\nexport default ResetUserPassword\n","/home/musdey/Github/VideoConsult/backend/src/models/Role.ts",["364","365","366","367"],"import { Document, Schema, Model, model } from 'mongoose'\n\ninterface IRole extends Document {\n  //_id let it autogenerate by mongodb\n  name: string\n}\n\nconst RoleSchema = new Schema(\n  {\n    //_id let it autogenerate by mongodb\n    name: {\n      type: String,\n      enum: ['USER', 'MODERATOR', 'ADMIN'],\n      default: 'USER'\n    },\n  },\n  { strict: false, versionKey: false }\n)\n\nconst Role: Model<IRole> = model('Role', RoleSchema)\nexport default Role","/home/musdey/Github/VideoConsult/backend/src/models/User.ts",["368","369","370","371","372","373","374","375","376","377","378","379","380","381","382","383","384","385"],"import { Document, Schema, Model, model } from 'mongoose'\n\ninterface IUser extends Document {\n  //_id let it autogenerate by mongodb\n  username?: string\n  role: string\n  password: string\n  firstName: string\n  lastName: string\n  email: string\n  phoneNumber: string\n  address: {\n    city: string\n    postalCode: number\n    street: string\n    streetNumber: string\n    streetExtra: string\n  }\n  emailIsVerified: boolean\n  otpActivated: boolean\n}\n\nconst UserSchema = new Schema(\n  {\n    //_id let it autogenerate by mongodb\n    role:\n    {\n      type: Schema.Types.ObjectId,\n      ref: \"Role\"\n    }\n    ,\n    username: {\n      type: String,\n    },\n    firstName: {\n      type: String,\n    },\n    lastName: {\n      type: String,\n    },\n    email: {\n      type: String,\n      required: true,\n      unique: true,\n    },\n    emailIsVerified: {\n      type: Boolean,\n      default: false,\n    },\n    password: {\n      type: String,\n      required: true,\n    },\n    phoneNumber: {\n      type: String,\n    },\n    address: {\n      city: {\n        type: String,\n      },\n      postalCode: {\n        type: Number,\n      },\n      street: {\n        type: String,\n      },\n      streetNumber: {\n        type: String,\n      },\n      streetExtra: {\n        type: String,\n      },\n    },\n    otpActivated: {\n      type: Boolean,\n      default: false\n    }\n  },\n  { strict: false, versionKey: false }\n)\n\nconst User: Model<IUser> = model('User', UserSchema)\nexport default User\n\n","/home/musdey/Github/VideoConsult/backend/src/models/UserLoginOTP.ts",["386","387","388","389"],"import { Document, Schema, Model, model } from 'mongoose'\n\ninterface IUserLoginOTP extends Document {\n  //_id let it autogenerate by mongodb\n  email: string,\n  otp: string,\n  timestamp: Date\n  otpExpires: Date\n}\n\nconst UserLoginOTPSchema = new Schema(\n  {\n    //_id let it autogenerate by mongodb\n    email: {\n      type: String,\n      required: true\n    },\n    otp: {\n      type: String,\n      required: true,\n      // TODO: auto remove token within 24 hours\n    },\n    timestamp: {\n      type: Date,\n      required: true\n    },\n    otpExpires: {\n      type: Date,\n      required: true\n    }\n  },\n  { strict: false, versionKey: false }\n)\n\nconst UserLoginOTP: Model<IUserLoginOTP> = model('UserLoginOTP', UserLoginOTPSchema)\nexport default UserLoginOTP","/home/musdey/Github/VideoConsult/backend/src/models/VerifyEmail.ts",["390","391","392"],"import { Document, Schema, Model, model } from 'mongoose'\n\ninterface IVerifyEmail extends Document {\n  //_id let it autogenerate by mongodb\n  email: string,\n  token: string,\n  timestamp: Date\n  verifyEmailExpires: Date\n}\n\nconst VerifyMailSchema = new Schema(\n  {\n    //_id let it autogenerate by mongodb\n    email: {\n      type: String,\n      required: true\n    },\n    token: {\n      type: String,\n      required: true,\n      unique: true\n      // TODO: auto remove token within 24 hours\n    },\n    timeStamp: {\n      type: Date,\n      required: true\n    },\n    verifyEmailExpires: {\n      type: Date,\n      required: true\n    }\n  },\n  { strict: false, versionKey: false }\n)\n\nconst VerifyMail: Model<IVerifyEmail> = model('VerifyMail', VerifyMailSchema)\nexport default VerifyMail","/home/musdey/Github/VideoConsult/backend/src/routes/router.ts",["393","394","395","396","397","398","399","400","401","402","403","404","405","406","407","408","409","410","411"],"import express, { Request, Response } from 'express'\nimport { signup, signin, signinWithOTP, requestOTP } from '../controllers/auth.controller'\nimport { passwordReset, passwordResetRequest, passwordResetCheckToken } from '../controllers/pw.controller'\nimport { allAccess, userBoard, adminBoard, moderatorBoard } from '../controllers/user.controller'\nimport { verifyMail } from '../controllers/verifyMail.controller'\nimport authJwt from '../middleware/authJwt'\nimport verifyBody from '../middleware/verifyBody'\nimport verifySignUp from '../middleware/verifySignup'\n\nconst router = express.Router()\n\nrouter.post('*', verifyBody)\nrouter.post(\n  \"/auth/signup\", verifySignUp.checkDuplicateUsernameOrEmail, signup\n);\nrouter.post(\"/auth/signin\", signin)\nrouter.post(\"/auth/signinWithOTP\", signinWithOTP)\nrouter.post(\"/auth/requestOTP\", requestOTP)\n\nrouter.get(\"/pw/reset-pw-request\", passwordResetRequest)\nrouter.get(\"/pw/reset-pw-check\", passwordResetCheckToken)\nrouter.post(\"/pw/reset-pw\", passwordReset)\n\nrouter.get(\"/mail/verifyMail\", verifyMail)\nrouter.get(\"/test/all\", allAccess);\nrouter.get(\"/user\", [authJwt.verifyToken], userBoard);\nrouter.get(\n  \"/test/mod\",\n  [authJwt.verifyToken, authJwt.isModerator],\n  moderatorBoard\n);\n\nrouter.get(\n  \"/test/admin\",\n  [authJwt.verifyToken, authJwt.isAdmin],\n  adminBoard\n);\n\nexport default router\n","/home/musdey/Github/VideoConsult/backend/src/service/mailService.ts",["412","413","414","415","416","417","418","419","420","421","422","423","424","425","426","427","428","429","430","431","432","433","434","435","436","437","438","439","440","441"],"'use strict'\nimport nodemailer from 'nodemailer'\ndeclare global {\n  enum MailType {\n    OTP = \"OTP\",\n    RESETPW = \"RESETPW\",\n    VERIFYMAIL = \"VERIFYMAIL\"\n  }\n}\nconst hostName = process.env.HOST_NAME || \"localhost:3000\"\nconst applicationName = process.env.APPLICATION_NAME || \"Test Application\"\nconst applicationEmail = process.env.APPLICATION_EMAIL || \"test@application.com\"\nconst applicationEmailPW = process.env.APPLICATION_EMAIL_PW || \"test\"\nconst applicationEmailHost = process.env.APPLICATION_EMAIL_HOST || \"mail.teststerver.net\"\nconst applicationEmailPort = process.env.APPLICATION_EMAIL_PORT ? Number.parseInt(process.env.APPLICATION_EMAIL_PORT) : 587\n\nconst transporter = nodemailer.createTransport({\n  host: applicationEmailHost,\n  port: applicationEmailPort,\n  secure: false, // true for 465, false for other ports\n  auth: {\n    user: applicationEmail, // generated ethereal user\n    pass: applicationEmailPW, // generated ethereal password\n  },\n})\n\nconst sendMail = async (username: string, receiverEmail: string, data: string, type: MailType): Promise<string> => {\n\n  const { subject, content } = buildEmailContent(username, data, type)\n\n  if (process.env.NODE_ENV !== 'production') {\n    console.log(\"DEVELOPMENT: Email would have been sent.\")\n    console.log(\"Subject: \", subject)\n    console.log(\"Content: \", content)\n    return Promise.resolve(\"ok\")\n  } else {\n    const info = await transporter.sendMail({\n      from: `\"${applicationName}\" <${applicationEmail}>`, // sender address\n      to: receiverEmail, // list of receivers\n      subject: subject, // Subject line\n      text: content,\n    })\n    console.log('SendMail result was ', info)\n    return info\n  }\n\n}\n\nconst buildEmailContent = (username: string, data: string, type: MailType) => {\n\n  let subject\n  let content\n  switch (type) {\n    case MailType.OTP:\n      subject = `[${applicationName}] Verify your login!`\n      content = `Hey ${username}!  \\n\\n` +\n        'Two factor authentication is acitvated for your account! \\n\\n' +\n        'In order to proceed you login, please type in the following PIN: \\n\\n' +\n        data + '\\n\\n'\n      break\n    case MailType.RESETPW:\n      subject = `[${applicationName}] Please reset your password!`\n      content = `Hey ${username}!  \\n\\n` +\n        'You are receiving this e-mail because you requested the reset of the password for your account.\\n\\n' +\n        'Please click the following link, or paste it into your browser to complete the process:\\n\\n' +\n        hostName + \"/api/reset-password?token=\" + data + '\\n\\n' +\n        'If you did not request this, please ignore this email and your password will remain unchanged.\\n'\n      break\n    case MailType.VERIFYMAIL:\n      subject = `[${applicationName}] Verify your email address!`\n      content = `Hey ${username}!  \\n\\n` +\n        `Thank you for signing up on ${applicationName}. :) \\n\\n` +\n        'In order to finish your signup process please click the following link, or paste it into your browser: \\n\\n' +\n        hostName + \"/api/verifyMail?token=\" + data + '\\n\\n'\n      break\n  }\n\n  return { subject, content }\n}\n\nexport default sendMail\n","/home/musdey/Github/VideoConsult/backend/src/service/qrCodeService.ts",[],"/home/musdey/Github/VideoConsult/backend/src/service/smsService.ts",["442","443","444","445","446","447","448","449"],"const sendSMS = async (username: string, receiverNumber: string, content: string): Promise<string> => {\n\n  if (process.env.NODE_ENV !== 'production') {\n    console.log(\"DEVELOPMENT: SMS would have been sent.\")\n    console.log(\"Username: \", username)\n    console.log(\"receiverNumber: \", receiverNumber)\n    console.log(\"Content: \", content)\n  } else {\n    // Call third-party service to send real sms\n\n  }\n  return Promise.resolve(\"ok\")\n\n}\n\nexport default sendSMS",{"ruleId":"450","severity":2,"message":"451","line":9,"column":8,"nodeType":"452","messageId":"453","endLine":9,"endColumn":26},{"ruleId":"454","severity":2,"message":"455","line":21,"column":1,"nodeType":"456","messageId":"457","endLine":21,"endColumn":23,"fix":"458"},{"ruleId":"454","severity":2,"message":"455","line":27,"column":1,"nodeType":"456","messageId":"457","endLine":27,"endColumn":19,"fix":"459"},{"ruleId":"460","severity":2,"message":"461","line":30,"column":5,"nodeType":"462","messageId":"463","endLine":30,"endColumn":35,"fix":"464"},{"ruleId":"460","severity":2,"message":"461","line":31,"column":5,"nodeType":"462","messageId":"463","endLine":31,"endColumn":51,"fix":"465"},{"ruleId":"466","severity":2,"message":"467","line":32,"column":4,"nodeType":"468","messageId":"469","endLine":32,"endColumn":5,"fix":"470"},{"ruleId":"466","severity":2,"message":"467","line":33,"column":9,"nodeType":"468","messageId":"469","endLine":33,"endColumn":10,"fix":"471"},{"ruleId":"466","severity":2,"message":"467","line":34,"column":3,"nodeType":"468","messageId":"469","endLine":34,"endColumn":4,"fix":"472"},{"ruleId":"454","severity":2,"message":"455","line":39,"column":1,"nodeType":"456","messageId":"457","endLine":39,"endColumn":58,"fix":"473"},{"ruleId":"460","severity":2,"message":"461","line":44,"column":23,"nodeType":"462","messageId":"463","endLine":44,"endColumn":57,"fix":"474"},{"ruleId":"466","severity":2,"message":"467","line":44,"column":60,"nodeType":"468","messageId":"469","endLine":44,"endColumn":61,"fix":"475"},{"ruleId":"466","severity":2,"message":"467","line":45,"column":3,"nodeType":"468","messageId":"469","endLine":45,"endColumn":4,"fix":"476"},{"ruleId":"477","severity":2,"message":"478","line":55,"column":1,"nodeType":"479","messageId":"480","endLine":56,"endColumn":1,"fix":"481"},{"ruleId":"466","severity":2,"message":"467","line":4,"column":53,"nodeType":"482","messageId":"469","endLine":4,"endColumn":54,"fix":"483"},{"ruleId":"466","severity":2,"message":"467","line":5,"column":34,"nodeType":"482","messageId":"469","endLine":5,"endColumn":35,"fix":"484"},{"ruleId":"466","severity":2,"message":"467","line":6,"column":34,"nodeType":"482","messageId":"469","endLine":6,"endColumn":35,"fix":"485"},{"ruleId":"486","severity":2,"message":"487","line":15,"column":7,"nodeType":"488","messageId":"489","endLine":17,"endColumn":5,"fix":"490"},{"ruleId":"491","severity":2,"message":"492","line":24,"column":54,"nodeType":"493","messageId":"494","endLine":24,"endColumn":55,"fix":"495"},{"ruleId":"466","severity":2,"message":"467","line":25,"column":7,"nodeType":"496","messageId":"469","endLine":25,"endColumn":8,"fix":"497"},{"ruleId":"460","severity":2,"message":"461","line":28,"column":49,"nodeType":"462","messageId":"463","endLine":28,"endColumn":55,"fix":"498"},{"ruleId":"460","severity":2,"message":"461","line":31,"column":44,"nodeType":"462","messageId":"463","endLine":31,"endColumn":79,"fix":"499"},{"ruleId":"466","severity":2,"message":"467","line":31,"column":82,"nodeType":"500","messageId":"469","endLine":31,"endColumn":83,"fix":"501"},{"ruleId":"466","severity":2,"message":"467","line":33,"column":50,"nodeType":"500","messageId":"469","endLine":33,"endColumn":51,"fix":"502"},{"ruleId":"466","severity":2,"message":"467","line":35,"column":2,"nodeType":"496","messageId":"469","endLine":35,"endColumn":3,"fix":"503"},{"ruleId":"486","severity":2,"message":"487","line":37,"column":64,"nodeType":"488","messageId":"489","endLine":39,"endColumn":3,"fix":"504"},{"ruleId":"460","severity":2,"message":"461","line":43,"column":46,"nodeType":"462","messageId":"463","endLine":43,"endColumn":63,"fix":"505"},{"ruleId":"466","severity":2,"message":"467","line":43,"column":66,"nodeType":"500","messageId":"469","endLine":43,"endColumn":67,"fix":"506"},{"ruleId":"466","severity":2,"message":"467","line":49,"column":6,"nodeType":"496","messageId":"469","endLine":49,"endColumn":7,"fix":"507"},{"ruleId":"460","severity":2,"message":"461","line":54,"column":18,"nodeType":"462","messageId":"463","endLine":54,"endColumn":37,"fix":"508"},{"ruleId":"466","severity":2,"message":"467","line":55,"column":9,"nodeType":"500","messageId":"469","endLine":55,"endColumn":10,"fix":"509"},{"ruleId":"460","severity":2,"message":"461","line":60,"column":46,"nodeType":"462","messageId":"463","endLine":60,"endColumn":73,"fix":"510"},{"ruleId":"466","severity":2,"message":"467","line":64,"column":7,"nodeType":"496","messageId":"469","endLine":64,"endColumn":8,"fix":"511"},{"ruleId":"454","severity":2,"message":"455","line":65,"column":5,"nodeType":"456","messageId":"457","endLine":65,"endColumn":55,"fix":"512"},{"ruleId":"466","severity":2,"message":"467","line":71,"column":7,"nodeType":"500","messageId":"469","endLine":71,"endColumn":8,"fix":"513"},{"ruleId":"486","severity":2,"message":"487","line":71,"column":8,"nodeType":"488","messageId":"489","endLine":73,"endColumn":3,"fix":"514"},{"ruleId":"466","severity":2,"message":"467","line":74,"column":50,"nodeType":"500","messageId":"469","endLine":74,"endColumn":51,"fix":"515"},{"ruleId":"460","severity":2,"message":"461","line":83,"column":46,"nodeType":"462","messageId":"463","endLine":83,"endColumn":63,"fix":"516"},{"ruleId":"466","severity":2,"message":"467","line":83,"column":66,"nodeType":"500","messageId":"469","endLine":83,"endColumn":67,"fix":"517"},{"ruleId":"466","severity":2,"message":"467","line":89,"column":6,"nodeType":"496","messageId":"469","endLine":89,"endColumn":7,"fix":"518"},{"ruleId":"460","severity":2,"message":"461","line":94,"column":18,"nodeType":"462","messageId":"463","endLine":94,"endColumn":37,"fix":"519"},{"ruleId":"466","severity":2,"message":"467","line":95,"column":9,"nodeType":"500","messageId":"469","endLine":95,"endColumn":10,"fix":"520"},{"ruleId":"460","severity":2,"message":"461","line":100,"column":44,"nodeType":"462","messageId":"463","endLine":100,"endColumn":71,"fix":"521"},{"ruleId":"486","severity":2,"message":"487","line":100,"column":74,"nodeType":"488","messageId":"489","endLine":102,"endColumn":3,"fix":"522"},{"ruleId":"466","severity":2,"message":"467","line":103,"column":50,"nodeType":"500","messageId":"469","endLine":103,"endColumn":51,"fix":"523"},{"ruleId":"486","severity":2,"message":"487","line":115,"column":71,"nodeType":"488","messageId":"489","endLine":117,"endColumn":3,"fix":"524"},{"ruleId":"460","severity":2,"message":"461","line":121,"column":46,"nodeType":"462","messageId":"463","endLine":121,"endColumn":63,"fix":"525"},{"ruleId":"466","severity":2,"message":"467","line":121,"column":66,"nodeType":"500","messageId":"469","endLine":121,"endColumn":67,"fix":"526"},{"ruleId":"466","severity":2,"message":"467","line":127,"column":6,"nodeType":"496","messageId":"469","endLine":127,"endColumn":7,"fix":"527"},{"ruleId":"460","severity":2,"message":"461","line":132,"column":18,"nodeType":"462","messageId":"463","endLine":132,"endColumn":37,"fix":"528"},{"ruleId":"466","severity":2,"message":"467","line":133,"column":9,"nodeType":"500","messageId":"469","endLine":133,"endColumn":10,"fix":"529"},{"ruleId":"460","severity":2,"message":"461","line":137,"column":46,"nodeType":"462","messageId":"463","endLine":137,"endColumn":74,"fix":"530"},{"ruleId":"466","severity":2,"message":"467","line":142,"column":7,"nodeType":"496","messageId":"469","endLine":142,"endColumn":8,"fix":"531"},{"ruleId":"466","severity":2,"message":"467","line":151,"column":7,"nodeType":"500","messageId":"469","endLine":151,"endColumn":8,"fix":"532"},{"ruleId":"486","severity":2,"message":"487","line":151,"column":8,"nodeType":"488","messageId":"489","endLine":153,"endColumn":3,"fix":"533"},{"ruleId":"466","severity":2,"message":"467","line":154,"column":50,"nodeType":"500","messageId":"469","endLine":154,"endColumn":51,"fix":"534"},{"ruleId":"486","severity":2,"message":"487","line":154,"column":51,"nodeType":"488","messageId":"489","endLine":156,"endColumn":3,"fix":"535"},{"ruleId":"486","severity":2,"message":"487","line":156,"column":4,"nodeType":"488","messageId":"489","endLine":158,"endColumn":1,"fix":"536"},{"ruleId":"537","severity":2,"message":"538","line":160,"column":53,"nodeType":"479","messageId":"539","fix":"540"},{"ruleId":"466","severity":2,"message":"467","line":1,"column":53,"nodeType":"482","messageId":"469","endLine":1,"endColumn":54,"fix":"541"},{"ruleId":"466","severity":2,"message":"467","line":2,"column":34,"nodeType":"482","messageId":"469","endLine":2,"endColumn":35,"fix":"542"},{"ruleId":"466","severity":2,"message":"467","line":4,"column":35,"nodeType":"482","messageId":"469","endLine":4,"endColumn":36,"fix":"543"},{"ruleId":"466","severity":2,"message":"467","line":5,"column":60,"nodeType":"482","messageId":"469","endLine":5,"endColumn":61,"fix":"544"},{"ruleId":"466","severity":2,"message":"467","line":6,"column":46,"nodeType":"482","messageId":"469","endLine":6,"endColumn":47,"fix":"545"},{"ruleId":"491","severity":2,"message":"492","line":31,"column":32,"nodeType":"493","messageId":"494","endLine":31,"endColumn":33,"fix":"546"},{"ruleId":"450","severity":2,"message":"547","line":34,"column":11,"nodeType":"452","messageId":"453","endLine":34,"endColumn":17},{"ruleId":"548","severity":2,"message":"549","line":36,"column":67,"nodeType":"452","messageId":"550","endLine":36,"endColumn":75},{"ruleId":"466","severity":2,"message":"467","line":41,"column":50,"nodeType":"500","messageId":"469","endLine":41,"endColumn":51,"fix":"551"},{"ruleId":"486","severity":2,"message":"487","line":42,"column":4,"nodeType":"488","messageId":"489","endLine":44,"endColumn":1,"fix":"552"},{"ruleId":"491","severity":2,"message":"492","line":52,"column":46,"nodeType":"493","messageId":"494","endLine":52,"endColumn":47,"fix":"553"},{"ruleId":"554","severity":2,"message":"555","line":60,"column":3,"nodeType":"500","messageId":"556","endLine":60,"endColumn":9,"fix":"557"},{"ruleId":"460","severity":2,"message":"461","line":80,"column":44,"nodeType":"462","messageId":"463","endLine":80,"endColumn":85,"fix":"558"},{"ruleId":"466","severity":2,"message":"467","line":82,"column":50,"nodeType":"500","messageId":"469","endLine":82,"endColumn":51,"fix":"559"},{"ruleId":"477","severity":2,"message":"478","line":86,"column":1,"nodeType":"479","messageId":"480","endLine":87,"endColumn":1,"fix":"560"},{"ruleId":"460","severity":2,"message":"461","line":1,"column":44,"nodeType":"462","messageId":"463","endLine":1,"endColumn":53,"fix":"561"},{"ruleId":"466","severity":2,"message":"467","line":1,"column":53,"nodeType":"482","messageId":"469","endLine":1,"endColumn":54,"fix":"562"},{"ruleId":"460","severity":2,"message":"461","line":4,"column":31,"nodeType":"462","messageId":"463","endLine":4,"endColumn":48,"fix":"563"},{"ruleId":"466","severity":2,"message":"467","line":4,"column":49,"nodeType":"500","messageId":"469","endLine":4,"endColumn":50,"fix":"564"},{"ruleId":"466","severity":2,"message":"467","line":5,"column":2,"nodeType":"496","messageId":"469","endLine":5,"endColumn":3,"fix":"565"},{"ruleId":"566","severity":2,"message":"567","line":8,"column":33,"nodeType":"493","messageId":"568","endLine":8,"endColumn":47,"fix":"569"},{"ruleId":"460","severity":2,"message":"461","line":8,"column":33,"nodeType":"462","messageId":"463","endLine":8,"endColumn":39,"fix":"570"},{"ruleId":"460","severity":2,"message":"461","line":8,"column":41,"nodeType":"462","messageId":"463","endLine":8,"endColumn":47,"fix":"571"},{"ruleId":"466","severity":2,"message":"467","line":8,"column":56,"nodeType":"500","messageId":"469","endLine":8,"endColumn":57,"fix":"572"},{"ruleId":"466","severity":2,"message":"467","line":9,"column":2,"nodeType":"496","messageId":"469","endLine":9,"endColumn":3,"fix":"573"},{"ruleId":"460","severity":2,"message":"461","line":12,"column":31,"nodeType":"462","messageId":"463","endLine":12,"endColumn":47,"fix":"574"},{"ruleId":"466","severity":2,"message":"467","line":12,"column":48,"nodeType":"500","messageId":"469","endLine":12,"endColumn":49,"fix":"575"},{"ruleId":"466","severity":2,"message":"467","line":13,"column":2,"nodeType":"496","messageId":"469","endLine":13,"endColumn":3,"fix":"576"},{"ruleId":"460","severity":2,"message":"461","line":16,"column":31,"nodeType":"462","messageId":"463","endLine":16,"endColumn":51,"fix":"577"},{"ruleId":"466","severity":2,"message":"467","line":16,"column":52,"nodeType":"500","messageId":"469","endLine":16,"endColumn":53,"fix":"578"},{"ruleId":"466","severity":2,"message":"467","line":17,"column":2,"nodeType":"496","messageId":"469","endLine":17,"endColumn":3,"fix":"579"},{"ruleId":"537","severity":2,"message":"538","line":19,"column":60,"nodeType":"479","messageId":"539","fix":"580"},{"ruleId":"466","severity":2,"message":"467","line":2,"column":53,"nodeType":"482","messageId":"469","endLine":2,"endColumn":54,"fix":"581"},{"ruleId":"466","severity":2,"message":"467","line":3,"column":34,"nodeType":"482","messageId":"469","endLine":3,"endColumn":35,"fix":"582"},{"ruleId":"466","severity":2,"message":"467","line":4,"column":35,"nodeType":"482","messageId":"469","endLine":4,"endColumn":36,"fix":"583"},{"ruleId":"466","severity":2,"message":"467","line":5,"column":47,"nodeType":"482","messageId":"469","endLine":5,"endColumn":48,"fix":"584"},{"ruleId":"450","severity":2,"message":"585","line":8,"column":7,"nodeType":"452","messageId":"453","endLine":8,"endColumn":13},{"ruleId":"460","severity":2,"message":"461","line":8,"column":42,"nodeType":"462","messageId":"463","endLine":8,"endColumn":48,"fix":"586"},{"ruleId":"460","severity":2,"message":"461","line":9,"column":45,"nodeType":"462","messageId":"463","endLine":9,"endColumn":63,"fix":"587"},{"ruleId":"486","severity":2,"message":"487","line":12,"column":82,"nodeType":"488","messageId":"489","endLine":14,"endColumn":3,"fix":"588"},{"ruleId":"460","severity":2,"message":"461","line":17,"column":46,"nodeType":"462","messageId":"463","endLine":17,"endColumn":63,"fix":"589"},{"ruleId":"466","severity":2,"message":"467","line":17,"column":90,"nodeType":"500","messageId":"469","endLine":17,"endColumn":91,"fix":"590"},{"ruleId":"466","severity":2,"message":"467","line":21,"column":57,"nodeType":"496","messageId":"469","endLine":21,"endColumn":58,"fix":"591"},{"ruleId":"460","severity":2,"message":"461","line":26,"column":42,"nodeType":"462","messageId":"463","endLine":26,"endColumn":67,"fix":"592"},{"ruleId":"460","severity":2,"message":"461","line":29,"column":46,"nodeType":"462","messageId":"463","endLine":29,"endColumn":76,"fix":"593"},{"ruleId":"460","severity":2,"message":"461","line":34,"column":44,"nodeType":"462","messageId":"463","endLine":34,"endColumn":74,"fix":"594"},{"ruleId":"466","severity":2,"message":"467","line":36,"column":50,"nodeType":"500","messageId":"469","endLine":36,"endColumn":51,"fix":"595"},{"ruleId":"486","severity":2,"message":"487","line":40,"column":59,"nodeType":"488","messageId":"489","endLine":42,"endColumn":3,"fix":"596"},{"ruleId":"460","severity":2,"message":"461","line":44,"column":44,"nodeType":"462","messageId":"463","endLine":44,"endColumn":60,"fix":"597"},{"ruleId":"460","severity":2,"message":"461","line":51,"column":46,"nodeType":"462","messageId":"463","endLine":51,"endColumn":65,"fix":"598"},{"ruleId":"466","severity":2,"message":"467","line":51,"column":92,"nodeType":"500","messageId":"469","endLine":51,"endColumn":93,"fix":"599"},{"ruleId":"460","severity":2,"message":"461","line":56,"column":46,"nodeType":"462","messageId":"463","endLine":56,"endColumn":63,"fix":"600"},{"ruleId":"466","severity":2,"message":"467","line":56,"column":90,"nodeType":"500","messageId":"469","endLine":56,"endColumn":91,"fix":"601"},{"ruleId":"454","severity":2,"message":"455","line":58,"column":5,"nodeType":"456","messageId":"457","endLine":58,"endColumn":24,"fix":"602"},{"ruleId":"460","severity":2,"message":"461","line":62,"column":46,"nodeType":"462","messageId":"463","endLine":62,"endColumn":84,"fix":"603"},{"ruleId":"460","severity":2,"message":"461","line":64,"column":46,"nodeType":"462","messageId":"463","endLine":64,"endColumn":112,"fix":"604"},{"ruleId":"486","severity":2,"message":"487","line":65,"column":6,"nodeType":"488","messageId":"489","endLine":67,"endColumn":3,"fix":"605"},{"ruleId":"466","severity":2,"message":"467","line":68,"column":50,"nodeType":"500","messageId":"469","endLine":68,"endColumn":51,"fix":"606"},{"ruleId":"466","severity":2,"message":"467","line":70,"column":2,"nodeType":"496","messageId":"469","endLine":70,"endColumn":3,"fix":"607"},{"ruleId":"537","severity":2,"message":"538","line":72,"column":48,"nodeType":"479","messageId":"539","fix":"608"},{"ruleId":"486","severity":2,"message":"487","line":14,"column":21,"nodeType":"488","messageId":"489","endLine":16,"endColumn":3,"fix":"609"},{"ruleId":"460","severity":2,"message":"461","line":17,"column":32,"nodeType":"462","messageId":"463","endLine":17,"endColumn":44,"fix":"610"},{"ruleId":"486","severity":2,"message":"487","line":3,"column":32,"nodeType":"488","messageId":"489","endLine":5,"endColumn":3,"fix":"611"},{"ruleId":"466","severity":2,"message":"467","line":7,"column":32,"nodeType":"468","messageId":"469","endLine":7,"endColumn":33,"fix":"612"},{"ruleId":"486","severity":2,"message":"487","line":8,"column":4,"nodeType":"488","messageId":"489","endLine":10,"endColumn":1,"fix":"613"},{"ruleId":"466","severity":2,"message":"467","line":10,"column":2,"nodeType":"496","messageId":"469","endLine":10,"endColumn":3,"fix":"614"},{"ruleId":"537","severity":2,"message":"538","line":12,"column":26,"nodeType":"479","messageId":"539","fix":"615"},{"ruleId":"460","severity":2,"message":"461","line":9,"column":19,"nodeType":"462","messageId":"463","endLine":9,"endColumn":48,"fix":"616"},{"ruleId":"460","severity":2,"message":"461","line":17,"column":37,"nodeType":"462","messageId":"463","endLine":17,"endColumn":43,"fix":"617"},{"ruleId":"460","severity":2,"message":"461","line":18,"column":42,"nodeType":"462","messageId":"463","endLine":18,"endColumn":53,"fix":"618"},{"ruleId":"460","severity":2,"message":"461","line":19,"column":38,"nodeType":"462","messageId":"463","endLine":19,"endColumn":45,"fix":"619"},{"ruleId":"537","severity":2,"message":"538","line":30,"column":30,"nodeType":"479","messageId":"539","fix":"620"},{"ruleId":"460","severity":2,"message":"461","line":1,"column":18,"nodeType":"462","messageId":"463","endLine":1,"endColumn":34,"fix":"621"},{"ruleId":"486","severity":2,"message":"487","line":3,"column":46,"nodeType":"488","messageId":"489","endLine":5,"endColumn":3,"fix":"622"},{"ruleId":"460","severity":2,"message":"461","line":6,"column":12,"nodeType":"462","messageId":"463","endLine":6,"endColumn":26,"fix":"623"},{"ruleId":"460","severity":2,"message":"461","line":7,"column":16,"nodeType":"462","messageId":"463","endLine":7,"endColumn":22,"fix":"624"},{"ruleId":"460","severity":2,"message":"461","line":8,"column":15,"nodeType":"462","messageId":"463","endLine":8,"endColumn":21,"fix":"625"},{"ruleId":"460","severity":2,"message":"461","line":9,"column":15,"nodeType":"462","messageId":"463","endLine":9,"endColumn":25,"fix":"626"},{"ruleId":"460","severity":2,"message":"461","line":10,"column":11,"nodeType":"462","messageId":"463","endLine":10,"endColumn":17,"fix":"627"},{"ruleId":"460","severity":2,"message":"461","line":11,"column":18,"nodeType":"462","messageId":"463","endLine":11,"endColumn":27,"fix":"628"},{"ruleId":"460","severity":2,"message":"461","line":13,"column":13,"nodeType":"462","messageId":"463","endLine":13,"endColumn":21,"fix":"629"},{"ruleId":"460","severity":2,"message":"461","line":15,"column":15,"nodeType":"462","messageId":"463","endLine":15,"endColumn":27,"fix":"630"},{"ruleId":"460","severity":2,"message":"461","line":16,"column":21,"nodeType":"462","messageId":"463","endLine":16,"endColumn":24,"fix":"631"},{"ruleId":"460","severity":2,"message":"461","line":17,"column":20,"nodeType":"462","messageId":"463","endLine":17,"endColumn":26,"fix":"632"},{"ruleId":"486","severity":2,"message":"487","line":25,"column":4,"nodeType":"488","messageId":"489","endLine":27,"endColumn":1,"fix":"633"},{"ruleId":"460","severity":2,"message":"461","line":7,"column":43,"nodeType":"462","messageId":"463","endLine":7,"endColumn":48,"fix":"634"},{"ruleId":"460","severity":2,"message":"461","line":7,"column":57,"nodeType":"462","messageId":"463","endLine":7,"endColumn":70,"fix":"635"},{"ruleId":"460","severity":2,"message":"461","line":8,"column":41,"nodeType":"462","messageId":"463","endLine":8,"endColumn":46,"fix":"636"},{"ruleId":"460","severity":2,"message":"461","line":8,"column":55,"nodeType":"462","messageId":"463","endLine":8,"endColumn":75,"fix":"637"},{"ruleId":"460","severity":2,"message":"461","line":9,"column":45,"nodeType":"462","messageId":"463","endLine":9,"endColumn":50,"fix":"638"},{"ruleId":"460","severity":2,"message":"461","line":9,"column":59,"nodeType":"462","messageId":"463","endLine":9,"endColumn":83,"fix":"639"},{"ruleId":"460","severity":2,"message":"461","line":10,"column":46,"nodeType":"462","messageId":"463","endLine":10,"endColumn":51,"fix":"640"},{"ruleId":"460","severity":2,"message":"461","line":10,"column":60,"nodeType":"462","messageId":"463","endLine":10,"endColumn":76,"fix":"641"},{"ruleId":"460","severity":2,"message":"461","line":11,"column":42,"nodeType":"462","messageId":"463","endLine":11,"endColumn":47,"fix":"642"},{"ruleId":"460","severity":2,"message":"461","line":11,"column":56,"nodeType":"462","messageId":"463","endLine":11,"endColumn":102,"fix":"643"},{"ruleId":"460","severity":2,"message":"461","line":12,"column":47,"nodeType":"462","messageId":"463","endLine":12,"endColumn":52,"fix":"644"},{"ruleId":"460","severity":2,"message":"461","line":12,"column":61,"nodeType":"462","messageId":"463","endLine":12,"endColumn":84,"fix":"645"},{"ruleId":"460","severity":2,"message":"461","line":13,"column":45,"nodeType":"462","messageId":"463","endLine":13,"endColumn":50,"fix":"646"},{"ruleId":"477","severity":2,"message":"478","line":15,"column":1,"nodeType":"479","messageId":"480","endLine":16,"endColumn":1,"fix":"647"},{"ruleId":"450","severity":2,"message":"648","line":2,"column":8,"nodeType":"452","messageId":"453","endLine":2,"endColumn":28},{"ruleId":"454","severity":2,"message":"455","line":5,"column":3,"nodeType":"456","messageId":"457","endLine":5,"endColumn":39,"fix":"649"},{"ruleId":"491","severity":2,"message":"492","line":7,"column":17,"nodeType":"493","messageId":"494","endLine":7,"endColumn":18,"fix":"650"},{"ruleId":"491","severity":2,"message":"492","line":10,"column":17,"nodeType":"493","messageId":"494","endLine":10,"endColumn":18,"fix":"651"},{"ruleId":"491","severity":2,"message":"492","line":13,"column":17,"nodeType":"493","messageId":"494","endLine":13,"endColumn":18,"fix":"652"},{"ruleId":"491","severity":2,"message":"492","line":17,"column":19,"nodeType":"493","messageId":"494","endLine":17,"endColumn":20,"fix":"653"},{"ruleId":"491","severity":2,"message":"492","line":21,"column":19,"nodeType":"493","messageId":"494","endLine":21,"endColumn":20,"fix":"654"},{"ruleId":"491","severity":2,"message":"492","line":24,"column":17,"nodeType":"493","messageId":"494","endLine":24,"endColumn":18,"fix":"655"},{"ruleId":"491","severity":2,"message":"492","line":28,"column":19,"nodeType":"493","messageId":"494","endLine":28,"endColumn":20,"fix":"656"},{"ruleId":"491","severity":2,"message":"492","line":31,"column":19,"nodeType":"493","messageId":"494","endLine":31,"endColumn":20,"fix":"657"},{"ruleId":"491","severity":2,"message":"492","line":34,"column":19,"nodeType":"493","messageId":"494","endLine":34,"endColumn":20,"fix":"658"},{"ruleId":"491","severity":2,"message":"492","line":37,"column":19,"nodeType":"493","messageId":"494","endLine":37,"endColumn":20,"fix":"659"},{"ruleId":"491","severity":2,"message":"492","line":40,"column":19,"nodeType":"493","messageId":"494","endLine":40,"endColumn":20,"fix":"660"},{"ruleId":"491","severity":2,"message":"492","line":41,"column":6,"nodeType":"493","messageId":"494","endLine":41,"endColumn":7,"fix":"661"},{"ruleId":"491","severity":2,"message":"492","line":42,"column":4,"nodeType":"493","messageId":"494","endLine":42,"endColumn":5,"fix":"662"},{"ruleId":"491","severity":2,"message":"492","line":48,"column":19,"nodeType":"493","messageId":"494","endLine":48,"endColumn":20,"fix":"663"},{"ruleId":"491","severity":2,"message":"492","line":52,"column":19,"nodeType":"493","messageId":"494","endLine":52,"endColumn":20,"fix":"664"},{"ruleId":"491","severity":2,"message":"492","line":53,"column":4,"nodeType":"493","messageId":"494","endLine":53,"endColumn":5,"fix":"665"},{"ruleId":"491","severity":2,"message":"492","line":71,"column":25,"nodeType":"666","messageId":"494","endLine":71,"endColumn":26,"fix":"667"},{"ruleId":"460","severity":2,"message":"461","line":1,"column":17,"nodeType":"462","messageId":"463","endLine":1,"endColumn":31,"fix":"668"},{"ruleId":"460","severity":2,"message":"461","line":2,"column":18,"nodeType":"462","messageId":"463","endLine":2,"endColumn":34,"fix":"669"},{"ruleId":"460","severity":2,"message":"461","line":3,"column":40,"nodeType":"462","messageId":"463","endLine":3,"endColumn":49,"fix":"670"},{"ruleId":"466","severity":2,"message":"467","line":3,"column":49,"nodeType":"482","messageId":"469","endLine":3,"endColumn":50,"fix":"671"},{"ruleId":"460","severity":2,"message":"461","line":5,"column":42,"nodeType":"462","messageId":"463","endLine":5,"endColumn":48,"fix":"672"},{"ruleId":"466","severity":2,"message":"467","line":8,"column":40,"nodeType":"496","messageId":"469","endLine":8,"endColumn":41,"fix":"673"},{"ruleId":"460","severity":2,"message":"461","line":11,"column":37,"nodeType":"462","messageId":"463","endLine":11,"endColumn":57,"fix":"674"},{"ruleId":"466","severity":2,"message":"467","line":11,"column":60,"nodeType":"468","messageId":"469","endLine":11,"endColumn":61,"fix":"675"},{"ruleId":"460","severity":2,"message":"461","line":18,"column":46,"nodeType":"462","messageId":"463","endLine":18,"endColumn":61,"fix":"676"},{"ruleId":"466","severity":2,"message":"467","line":18,"column":64,"nodeType":"500","messageId":"469","endLine":18,"endColumn":65,"fix":"677"},{"ruleId":"466","severity":2,"message":"467","line":20,"column":28,"nodeType":"468","messageId":"469","endLine":20,"endColumn":29,"fix":"678"},{"ruleId":"466","severity":2,"message":"467","line":21,"column":11,"nodeType":"468","messageId":"469","endLine":21,"endColumn":12,"fix":"679"},{"ruleId":"466","severity":2,"message":"467","line":22,"column":5,"nodeType":"468","messageId":"469","endLine":22,"endColumn":6,"fix":"680"},{"ruleId":"466","severity":2,"message":"467","line":23,"column":2,"nodeType":"496","messageId":"469","endLine":23,"endColumn":3,"fix":"681"},{"ruleId":"460","severity":2,"message":"461","line":28,"column":37,"nodeType":"462","messageId":"463","endLine":28,"endColumn":54,"fix":"682"},{"ruleId":"466","severity":2,"message":"467","line":28,"column":57,"nodeType":"468","messageId":"469","endLine":28,"endColumn":58,"fix":"683"},{"ruleId":"466","severity":2,"message":"467","line":29,"column":11,"nodeType":"500","messageId":"469","endLine":29,"endColumn":12,"fix":"684"},{"ruleId":"460","severity":2,"message":"461","line":32,"column":22,"nodeType":"462","messageId":"463","endLine":32,"endColumn":29,"fix":"685"},{"ruleId":"460","severity":2,"message":"461","line":35,"column":37,"nodeType":"462","messageId":"463","endLine":35,"endColumn":58,"fix":"686"},{"ruleId":"466","severity":2,"message":"467","line":35,"column":61,"nodeType":"468","messageId":"469","endLine":35,"endColumn":62,"fix":"687"},{"ruleId":"554","severity":2,"message":"555","line":36,"column":5,"nodeType":"500","messageId":"556","endLine":36,"endColumn":11,"fix":"688"},{"ruleId":"466","severity":2,"message":"467","line":38,"column":2,"nodeType":"496","messageId":"469","endLine":38,"endColumn":3,"fix":"689"},{"ruleId":"460","severity":2,"message":"461","line":43,"column":37,"nodeType":"462","messageId":"463","endLine":43,"endColumn":54,"fix":"690"},{"ruleId":"466","severity":2,"message":"467","line":43,"column":57,"nodeType":"468","messageId":"469","endLine":43,"endColumn":58,"fix":"691"},{"ruleId":"466","severity":2,"message":"467","line":44,"column":11,"nodeType":"500","messageId":"469","endLine":44,"endColumn":12,"fix":"692"},{"ruleId":"460","severity":2,"message":"461","line":47,"column":22,"nodeType":"462","messageId":"463","endLine":47,"endColumn":33,"fix":"693"},{"ruleId":"460","severity":2,"message":"461","line":50,"column":37,"nodeType":"462","messageId":"463","endLine":50,"endColumn":62,"fix":"694"},{"ruleId":"466","severity":2,"message":"467","line":50,"column":65,"nodeType":"468","messageId":"469","endLine":50,"endColumn":66,"fix":"695"},{"ruleId":"554","severity":2,"message":"555","line":51,"column":5,"nodeType":"500","messageId":"556","endLine":51,"endColumn":11,"fix":"696"},{"ruleId":"466","severity":2,"message":"467","line":53,"column":2,"nodeType":"496","messageId":"469","endLine":53,"endColumn":3,"fix":"697"},{"ruleId":"491","severity":2,"message":"492","line":58,"column":14,"nodeType":"493","messageId":"494","endLine":58,"endColumn":15,"fix":"698"},{"ruleId":"466","severity":2,"message":"467","line":59,"column":2,"nodeType":"496","messageId":"469","endLine":59,"endColumn":3,"fix":"699"},{"ruleId":"466","severity":2,"message":"467","line":60,"column":23,"nodeType":"700","messageId":"469","endLine":60,"endColumn":24,"fix":"701"},{"ruleId":"537","severity":2,"message":"538","line":60,"column":24,"nodeType":"479","messageId":"539","fix":"702"},{"ruleId":"460","severity":2,"message":"461","line":1,"column":49,"nodeType":"462","messageId":"463","endLine":1,"endColumn":58,"fix":"703"},{"ruleId":"460","severity":2,"message":"461","line":2,"column":20,"nodeType":"462","messageId":"463","endLine":2,"endColumn":35,"fix":"704"},{"ruleId":"486","severity":2,"message":"487","line":4,"column":79,"nodeType":"488","messageId":"489","endLine":6,"endColumn":3,"fix":"705"},{"ruleId":"537","severity":2,"message":"538","line":14,"column":26,"nodeType":"479","messageId":"539","fix":"706"},{"ruleId":"466","severity":2,"message":"467","line":1,"column":58,"nodeType":"482","messageId":"469","endLine":1,"endColumn":59,"fix":"707"},{"ruleId":"486","severity":2,"message":"487","line":4,"column":92,"nodeType":"488","messageId":"489","endLine":6,"endColumn":3,"fix":"708"},{"ruleId":"466","severity":2,"message":"467","line":25,"column":45,"nodeType":"468","messageId":"469","endLine":25,"endColumn":46,"fix":"709"},{"ruleId":"466","severity":2,"message":"467","line":26,"column":13,"nodeType":"500","messageId":"469","endLine":26,"endColumn":14,"fix":"710"},{"ruleId":"460","severity":2,"message":"461","line":30,"column":39,"nodeType":"462","messageId":"463","endLine":30,"endColumn":73,"fix":"711"},{"ruleId":"466","severity":2,"message":"467","line":30,"column":76,"nodeType":"468","messageId":"469","endLine":30,"endColumn":77,"fix":"712"},{"ruleId":"466","severity":2,"message":"467","line":31,"column":13,"nodeType":"500","messageId":"469","endLine":31,"endColumn":14,"fix":"713"},{"ruleId":"466","severity":2,"message":"467","line":34,"column":11,"nodeType":"468","messageId":"469","endLine":34,"endColumn":12,"fix":"714"},{"ruleId":"466","severity":2,"message":"467","line":35,"column":5,"nodeType":"468","messageId":"469","endLine":35,"endColumn":6,"fix":"715"},{"ruleId":"466","severity":2,"message":"467","line":36,"column":2,"nodeType":"496","messageId":"469","endLine":36,"endColumn":3,"fix":"716"},{"ruleId":"477","severity":2,"message":"478","line":38,"column":1,"nodeType":"479","messageId":"480","endLine":39,"endColumn":1,"fix":"717"},{"ruleId":"491","severity":2,"message":"492","line":40,"column":32,"nodeType":"493","messageId":"494","endLine":40,"endColumn":33,"fix":"718"},{"ruleId":"466","severity":2,"message":"467","line":41,"column":2,"nodeType":"496","messageId":"469","endLine":41,"endColumn":3,"fix":"719"},{"ruleId":"466","severity":2,"message":"467","line":43,"column":28,"nodeType":"700","messageId":"469","endLine":43,"endColumn":29,"fix":"720"},{"ruleId":"537","severity":2,"message":"538","line":43,"column":29,"nodeType":"479","messageId":"539","fix":"721"},{"ruleId":"454","severity":2,"message":"455","line":13,"column":5,"nodeType":"456","messageId":"457","endLine":13,"endColumn":41,"fix":"722"},{"ruleId":"491","severity":2,"message":"492","line":16,"column":21,"nodeType":"493","messageId":"494","endLine":16,"endColumn":22,"fix":"723"},{"ruleId":"491","severity":2,"message":"492","line":20,"column":26,"nodeType":"493","messageId":"494","endLine":20,"endColumn":27,"fix":"724"},{"ruleId":"491","severity":2,"message":"492","line":24,"column":21,"nodeType":"493","messageId":"494","endLine":24,"endColumn":22,"fix":"725"},{"ruleId":"491","severity":2,"message":"492","line":28,"column":21,"nodeType":"493","messageId":"494","endLine":28,"endColumn":22,"fix":"726"},{"ruleId":"491","severity":2,"message":"492","line":31,"column":20,"nodeType":"493","messageId":"494","endLine":31,"endColumn":21,"fix":"727"},{"ruleId":"491","severity":2,"message":"492","line":32,"column":6,"nodeType":"493","messageId":"494","endLine":32,"endColumn":7,"fix":"728"},{"ruleId":"454","severity":2,"message":"455","line":4,"column":3,"nodeType":"456","messageId":"457","endLine":4,"endColumn":39,"fix":"729"},{"ruleId":"454","severity":2,"message":"455","line":10,"column":5,"nodeType":"456","messageId":"457","endLine":10,"endColumn":41,"fix":"730"},{"ruleId":"491","severity":2,"message":"492","line":15,"column":6,"nodeType":"493","messageId":"494","endLine":15,"endColumn":7,"fix":"731"},{"ruleId":"537","severity":2,"message":"538","line":21,"column":20,"nodeType":"479","messageId":"539","fix":"732"},{"ruleId":"454","severity":2,"message":"455","line":4,"column":3,"nodeType":"456","messageId":"457","endLine":4,"endColumn":39,"fix":"733"},{"ruleId":"454","severity":2,"message":"455","line":25,"column":5,"nodeType":"456","messageId":"457","endLine":25,"endColumn":41,"fix":"734"},{"ruleId":"460","severity":2,"message":"461","line":29,"column":12,"nodeType":"462","messageId":"463","endLine":29,"endColumn":18,"fix":"735"},{"ruleId":"736","severity":2,"message":"737","line":31,"column":5,"nodeType":"493","messageId":"738","endLine":31,"endColumn":6,"fix":"739"},{"ruleId":"491","severity":2,"message":"492","line":33,"column":19,"nodeType":"493","messageId":"494","endLine":33,"endColumn":20,"fix":"740"},{"ruleId":"491","severity":2,"message":"492","line":36,"column":19,"nodeType":"493","messageId":"494","endLine":36,"endColumn":20,"fix":"741"},{"ruleId":"491","severity":2,"message":"492","line":39,"column":19,"nodeType":"493","messageId":"494","endLine":39,"endColumn":20,"fix":"742"},{"ruleId":"491","severity":2,"message":"492","line":44,"column":19,"nodeType":"493","messageId":"494","endLine":44,"endColumn":20,"fix":"743"},{"ruleId":"491","severity":2,"message":"492","line":48,"column":21,"nodeType":"493","messageId":"494","endLine":48,"endColumn":22,"fix":"744"},{"ruleId":"491","severity":2,"message":"492","line":52,"column":21,"nodeType":"493","messageId":"494","endLine":52,"endColumn":22,"fix":"745"},{"ruleId":"491","severity":2,"message":"492","line":55,"column":19,"nodeType":"493","messageId":"494","endLine":55,"endColumn":20,"fix":"746"},{"ruleId":"491","severity":2,"message":"492","line":59,"column":21,"nodeType":"493","messageId":"494","endLine":59,"endColumn":22,"fix":"747"},{"ruleId":"491","severity":2,"message":"492","line":62,"column":21,"nodeType":"493","messageId":"494","endLine":62,"endColumn":22,"fix":"748"},{"ruleId":"491","severity":2,"message":"492","line":65,"column":21,"nodeType":"493","messageId":"494","endLine":65,"endColumn":22,"fix":"749"},{"ruleId":"491","severity":2,"message":"492","line":68,"column":21,"nodeType":"493","messageId":"494","endLine":68,"endColumn":22,"fix":"750"},{"ruleId":"491","severity":2,"message":"492","line":71,"column":21,"nodeType":"493","messageId":"494","endLine":71,"endColumn":22,"fix":"751"},{"ruleId":"491","severity":2,"message":"492","line":72,"column":8,"nodeType":"493","messageId":"494","endLine":72,"endColumn":9,"fix":"752"},{"ruleId":"477","severity":2,"message":"753","line":84,"column":1,"nodeType":"479","messageId":"754","endLine":85,"endColumn":1,"fix":"755"},{"ruleId":"454","severity":2,"message":"455","line":4,"column":3,"nodeType":"456","messageId":"457","endLine":4,"endColumn":39,"fix":"756"},{"ruleId":"454","severity":2,"message":"455","line":13,"column":5,"nodeType":"456","messageId":"457","endLine":13,"endColumn":41,"fix":"757"},{"ruleId":"491","severity":2,"message":"492","line":20,"column":21,"nodeType":"493","messageId":"494","endLine":20,"endColumn":22,"fix":"758"},{"ruleId":"537","severity":2,"message":"538","line":36,"column":28,"nodeType":"479","messageId":"539","fix":"759"},{"ruleId":"454","severity":2,"message":"455","line":4,"column":3,"nodeType":"456","messageId":"457","endLine":4,"endColumn":39,"fix":"760"},{"ruleId":"454","severity":2,"message":"455","line":13,"column":5,"nodeType":"456","messageId":"457","endLine":13,"endColumn":41,"fix":"761"},{"ruleId":"537","severity":2,"message":"538","line":37,"column":26,"nodeType":"479","messageId":"539","fix":"762"},{"ruleId":"450","severity":2,"message":"763","line":1,"column":19,"nodeType":"452","messageId":"453","endLine":1,"endColumn":26},{"ruleId":"450","severity":2,"message":"764","line":1,"column":28,"nodeType":"452","messageId":"453","endLine":1,"endColumn":36},{"ruleId":"460","severity":2,"message":"461","line":14,"column":3,"nodeType":"462","messageId":"463","endLine":14,"endColumn":17,"fix":"765"},{"ruleId":"466","severity":2,"message":"467","line":15,"column":2,"nodeType":"468","messageId":"469","endLine":15,"endColumn":3,"fix":"766"},{"ruleId":"460","severity":2,"message":"461","line":16,"column":13,"nodeType":"462","messageId":"463","endLine":16,"endColumn":27,"fix":"767"},{"ruleId":"460","severity":2,"message":"461","line":17,"column":13,"nodeType":"462","messageId":"463","endLine":17,"endColumn":34,"fix":"768"},{"ruleId":"460","severity":2,"message":"461","line":18,"column":13,"nodeType":"462","messageId":"463","endLine":18,"endColumn":31,"fix":"769"},{"ruleId":"460","severity":2,"message":"461","line":20,"column":12,"nodeType":"462","messageId":"463","endLine":20,"endColumn":34,"fix":"770"},{"ruleId":"460","severity":2,"message":"461","line":21,"column":12,"nodeType":"462","messageId":"463","endLine":21,"endColumn":32,"fix":"771"},{"ruleId":"460","severity":2,"message":"461","line":22,"column":13,"nodeType":"462","messageId":"463","endLine":22,"endColumn":27,"fix":"772"},{"ruleId":"460","severity":2,"message":"461","line":24,"column":12,"nodeType":"462","messageId":"463","endLine":24,"endColumn":30,"fix":"773"},{"ruleId":"460","severity":2,"message":"461","line":25,"column":12,"nodeType":"462","messageId":"463","endLine":25,"endColumn":23,"fix":"774"},{"ruleId":"466","severity":2,"message":"467","line":25,"column":35,"nodeType":"468","messageId":"469","endLine":25,"endColumn":36,"fix":"775"},{"ruleId":"460","severity":2,"message":"461","line":26,"column":12,"nodeType":"462","messageId":"463","endLine":26,"endColumn":19,"fix":"776"},{"ruleId":"466","severity":2,"message":"467","line":26,"column":54,"nodeType":"468","messageId":"469","endLine":26,"endColumn":55,"fix":"777"},{"ruleId":"460","severity":2,"message":"461","line":28,"column":3,"nodeType":"462","messageId":"463","endLine":28,"endColumn":14,"fix":"778"},{"ruleId":"466","severity":2,"message":"467","line":31,"column":2,"nodeType":"468","messageId":"469","endLine":31,"endColumn":3,"fix":"779"},{"ruleId":"460","severity":2,"message":"461","line":34,"column":3,"nodeType":"462","messageId":"463","endLine":34,"endColumn":16,"fix":"780"},{"ruleId":"466","severity":2,"message":"467","line":37,"column":2,"nodeType":"468","messageId":"469","endLine":37,"endColumn":3,"fix":"781"},{"ruleId":"450","severity":2,"message":"782","line":4,"column":8,"nodeType":"452","messageId":"453","endLine":4,"endColumn":16},{"ruleId":"450","severity":2,"message":"782","line":4,"column":8,"nodeType":"452","messageId":"453","endLine":4,"endColumn":16},{"ruleId":"450","severity":2,"message":"783","line":5,"column":5,"nodeType":"452","messageId":"453","endLine":5,"endColumn":8},{"ruleId":"460","severity":2,"message":"461","line":5,"column":11,"nodeType":"462","messageId":"463","endLine":5,"endColumn":16,"fix":"784"},{"ruleId":"450","severity":2,"message":"785","line":6,"column":5,"nodeType":"452","messageId":"453","endLine":6,"endColumn":12},{"ruleId":"460","severity":2,"message":"461","line":6,"column":15,"nodeType":"462","messageId":"463","endLine":6,"endColumn":24,"fix":"786"},{"ruleId":"450","severity":2,"message":"787","line":7,"column":5,"nodeType":"452","messageId":"453","endLine":7,"endColumn":15},{"ruleId":"460","severity":2,"message":"461","line":7,"column":18,"nodeType":"462","messageId":"463","endLine":7,"endColumn":30,"fix":"788"},{"ruleId":"460","severity":2,"message":"461","line":10,"column":43,"nodeType":"462","messageId":"463","endLine":10,"endColumn":59,"fix":"789"},{"ruleId":"460","severity":2,"message":"461","line":11,"column":57,"nodeType":"462","messageId":"463","endLine":11,"endColumn":75,"fix":"790"},{"ruleId":"460","severity":2,"message":"461","line":12,"column":59,"nodeType":"462","messageId":"463","endLine":12,"endColumn":81,"fix":"791"},{"ruleId":"460","severity":2,"message":"461","line":13,"column":64,"nodeType":"462","messageId":"463","endLine":13,"endColumn":70,"fix":"792"},{"ruleId":"460","severity":2,"message":"461","line":14,"column":68,"nodeType":"462","messageId":"463","endLine":14,"endColumn":90,"fix":"793"},{"ruleId":"491","severity":2,"message":"492","line":23,"column":29,"nodeType":"493","messageId":"494","endLine":23,"endColumn":30,"fix":"794"},{"ruleId":"491","severity":2,"message":"492","line":24,"column":4,"nodeType":"493","messageId":"494","endLine":24,"endColumn":5,"fix":"795"},{"ruleId":"548","severity":2,"message":"549","line":27,"column":86,"nodeType":"452","messageId":"550","endLine":27,"endColumn":94},{"ruleId":"486","severity":2,"message":"487","line":27,"column":116,"nodeType":"488","messageId":"489","endLine":29,"endColumn":3,"fix":"796"},{"ruleId":"460","severity":2,"message":"461","line":32,"column":17,"nodeType":"462","messageId":"463","endLine":32,"endColumn":59,"fix":"797"},{"ruleId":"460","severity":2,"message":"461","line":33,"column":17,"nodeType":"462","messageId":"463","endLine":33,"endColumn":28,"fix":"798"},{"ruleId":"460","severity":2,"message":"461","line":34,"column":17,"nodeType":"462","messageId":"463","endLine":34,"endColumn":28,"fix":"799"},{"ruleId":"460","severity":2,"message":"461","line":35,"column":28,"nodeType":"462","messageId":"463","endLine":35,"endColumn":32,"fix":"800"},{"ruleId":"491","severity":2,"message":"492","line":41,"column":20,"nodeType":"493","messageId":"494","endLine":41,"endColumn":21,"fix":"801"},{"ruleId":"486","severity":2,"message":"487","line":45,"column":4,"nodeType":"488","messageId":"489","endLine":47,"endColumn":1,"fix":"802"},{"ruleId":"548","severity":2,"message":"549","line":49,"column":66,"nodeType":"452","messageId":"550","endLine":49,"endColumn":74},{"ruleId":"486","severity":2,"message":"487","line":49,"column":79,"nodeType":"488","messageId":"489","endLine":51,"endColumn":3,"fix":"803"},{"ruleId":"548","severity":2,"message":"549","line":54,"column":10,"nodeType":"452","messageId":"550","endLine":54,"endColumn":18},{"ruleId":"548","severity":2,"message":"549","line":61,"column":10,"nodeType":"452","messageId":"550","endLine":61,"endColumn":18},{"ruleId":"460","severity":2,"message":"461","line":66,"column":20,"nodeType":"462","messageId":"463","endLine":66,"endColumn":48,"fix":"804"},{"ruleId":"548","severity":2,"message":"549","line":69,"column":10,"nodeType":"452","messageId":"550","endLine":69,"endColumn":18},{"ruleId":"460","severity":2,"message":"461","line":74,"column":20,"nodeType":"462","messageId":"463","endLine":74,"endColumn":44,"fix":"805"},{"ruleId":"486","severity":2,"message":"487","line":1,"column":103,"nodeType":"488","messageId":"489","endLine":3,"endColumn":3,"fix":"806"},{"ruleId":"460","severity":2,"message":"461","line":4,"column":17,"nodeType":"462","messageId":"463","endLine":4,"endColumn":57,"fix":"807"},{"ruleId":"460","severity":2,"message":"461","line":5,"column":17,"nodeType":"462","messageId":"463","endLine":5,"endColumn":29,"fix":"808"},{"ruleId":"460","severity":2,"message":"461","line":6,"column":17,"nodeType":"462","messageId":"463","endLine":6,"endColumn":35,"fix":"809"},{"ruleId":"460","severity":2,"message":"461","line":7,"column":17,"nodeType":"462","messageId":"463","endLine":7,"endColumn":28,"fix":"810"},{"ruleId":"460","severity":2,"message":"461","line":12,"column":26,"nodeType":"462","messageId":"463","endLine":12,"endColumn":30,"fix":"811"},{"ruleId":"486","severity":2,"message":"487","line":12,"column":31,"nodeType":"488","messageId":"489","endLine":14,"endColumn":1,"fix":"812"},{"ruleId":"537","severity":2,"message":"538","line":16,"column":23,"nodeType":"479","messageId":"539","fix":"813"},"no-unused-vars","'initializeTestUser' is defined but never used.","Identifier","unusedVar","spaced-comment","Expected space or tab after '//' in comment.","Line","expectedSpaceAfter",{"range":"814","text":"815"},{"range":"816","text":"815"},"quotes","Strings must use singlequote.","Literal","wrongQuotes",{"range":"817","text":"818"},{"range":"819","text":"820"},"semi","Extra semicolon.","ExpressionStatement","extraSemi",{"range":"821","text":"822"},{"range":"823","text":"824"},{"range":"825","text":"826"},{"range":"827","text":"815"},{"range":"828","text":"829"},{"range":"830","text":"824"},{"range":"831","text":"832"},"no-multiple-empty-lines","More than 1 blank line not allowed.","Program","consecutiveBlank",{"range":"833","text":"834"},"ImportDeclaration",{"range":"835","text":"836"},{"range":"837","text":"838"},{"range":"839","text":"840"},"padded-blocks","Block must not be padded by blank lines.","BlockStatement","neverPadBlock",{"range":"841","text":"842"},"comma-dangle","Unexpected trailing comma.","Property","unexpected",{"range":"843","text":"834"},"VariableDeclaration",{"range":"844","text":"845"},{"range":"846","text":"847"},{"range":"848","text":"849"},"ReturnStatement",{"range":"850","text":"851"},{"range":"852","text":"851"},{"range":"853","text":"854"},{"range":"855","text":"842"},{"range":"856","text":"857"},{"range":"858","text":"859"},{"range":"860","text":"861"},{"range":"862","text":"863"},{"range":"864","text":"859"},{"range":"865","text":"866"},{"range":"867","text":"868"},{"range":"869","text":"815"},{"range":"870","text":"871"},{"range":"872","text":"842"},{"range":"873","text":"851"},{"range":"874","text":"857"},{"range":"875","text":"859"},{"range":"876","text":"861"},{"range":"877","text":"863"},{"range":"878","text":"859"},{"range":"879","text":"866"},{"range":"880","text":"842"},{"range":"881","text":"851"},{"range":"882","text":"842"},{"range":"883","text":"857"},{"range":"884","text":"859"},{"range":"885","text":"861"},{"range":"886","text":"863"},{"range":"887","text":"859"},{"range":"888","text":"889"},{"range":"890","text":"891"},{"range":"892","text":"871"},{"range":"893","text":"842"},{"range":"894","text":"871"},{"range":"895","text":"842"},{"range":"896","text":"842"},"eol-last","Newline required at end of file but not found.","missing",{"range":"897","text":"842"},{"range":"898","text":"836"},{"range":"899","text":"838"},{"range":"900","text":"901"},{"range":"902","text":"903"},{"range":"904","text":"905"},{"range":"906","text":"834"},"'result' is assigned a value but never used.","no-undef","'MailType' is not defined.","undef",{"range":"907","text":"851"},{"range":"908","text":"842"},{"range":"909","text":"834"},"no-useless-return","Unnecessary return statement.","unnecessaryReturn",{"range":"910","text":"911"},{"range":"912","text":"913"},{"range":"914","text":"851"},{"range":"915","text":"834"},{"range":"916","text":"917"},{"range":"918","text":"919"},{"range":"920","text":"921"},{"range":"922","text":"824"},{"range":"923","text":"854"},"quote-props","Unnecessarily quoted property 'data' found.","unnecessarilyQuotedProperty",{"range":"924","text":"925"},{"range":"924","text":"926"},{"range":"927","text":"928"},{"range":"929","text":"824"},{"range":"930","text":"854"},{"range":"931","text":"932"},{"range":"933","text":"824"},{"range":"934","text":"854"},{"range":"935","text":"936"},{"range":"937","text":"824"},{"range":"938","text":"939"},{"range":"940","text":"842"},{"range":"941","text":"836"},{"range":"942","text":"838"},{"range":"943","text":"901"},{"range":"944","text":"945"},"'secret' is assigned a value but never used.",{"range":"946","text":"947"},{"range":"948","text":"949"},{"range":"950","text":"842"},{"range":"951","text":"857"},{"range":"952","text":"859"},{"range":"953","text":"954"},{"range":"955","text":"956"},{"range":"957","text":"958"},{"range":"959","text":"958"},{"range":"960","text":"851"},{"range":"961","text":"842"},{"range":"962","text":"963"},{"range":"964","text":"965"},{"range":"966","text":"859"},{"range":"967","text":"857"},{"range":"968","text":"859"},{"range":"969","text":"815"},{"range":"970","text":"971"},{"range":"972","text":"973"},{"range":"974","text":"842"},{"range":"975","text":"851"},{"range":"976","text":"939"},{"range":"977","text":"842"},{"range":"978","text":"842"},{"range":"979","text":"980"},{"range":"981","text":"842"},{"range":"982","text":"851"},{"range":"983","text":"842"},{"range":"984","text":"939"},{"range":"985","text":"842"},{"range":"986","text":"987"},{"range":"988","text":"847"},{"range":"989","text":"990"},{"range":"991","text":"992"},{"range":"993","text":"842"},{"range":"994","text":"995"},{"range":"996","text":"842"},{"range":"997","text":"998"},{"range":"999","text":"1000"},{"range":"1001","text":"1002"},{"range":"1003","text":"1004"},{"range":"1005","text":"847"},{"range":"1006","text":"1007"},{"range":"1008","text":"1009"},{"range":"1010","text":"1011"},{"range":"1012","text":"1013"},{"range":"1014","text":"1015"},{"range":"1016","text":"842"},{"range":"1017","text":"1018"},{"range":"1019","text":"1020"},{"range":"1021","text":"1022"},{"range":"1023","text":"1024"},{"range":"1025","text":"1026"},{"range":"1027","text":"1028"},{"range":"1029","text":"1026"},{"range":"1030","text":"1031"},{"range":"1032","text":"1033"},{"range":"1034","text":"1035"},{"range":"1036","text":"1037"},{"range":"1038","text":"1039"},{"range":"1040","text":"1026"},{"range":"1041","text":"834"},"'InputValidationError' is defined but never used.",{"range":"1042","text":"815"},{"range":"1043","text":"834"},{"range":"1044","text":"834"},{"range":"1045","text":"834"},{"range":"1046","text":"834"},{"range":"1047","text":"834"},{"range":"1048","text":"834"},{"range":"1049","text":"834"},{"range":"1050","text":"834"},{"range":"1051","text":"834"},{"range":"1052","text":"834"},{"range":"1053","text":"834"},{"range":"1054","text":"834"},{"range":"1055","text":"834"},{"range":"1056","text":"834"},{"range":"1057","text":"834"},{"range":"1058","text":"834"},"ExportSpecifier",{"range":"1059","text":"834"},{"range":"1060","text":"1061"},{"range":"1062","text":"995"},{"range":"1063","text":"917"},{"range":"1064","text":"919"},{"range":"1065","text":"947"},{"range":"1066","text":"1067"},{"range":"1068","text":"1069"},{"range":"1070","text":"1071"},{"range":"1072","text":"1073"},{"range":"1074","text":"859"},{"range":"1075","text":"1076"},{"range":"1077","text":"851"},{"range":"1078","text":"824"},{"range":"1079","text":"854"},{"range":"1080","text":"1081"},{"range":"1082","text":"1071"},{"range":"1083","text":"1084"},{"range":"1085","text":"992"},{"range":"1086","text":"1087"},{"range":"1088","text":"1071"},{"range":"1089","text":"1090"},{"range":"1091","text":"854"},{"range":"1092","text":"1081"},{"range":"1093","text":"1071"},{"range":"1094","text":"1084"},{"range":"1095","text":"990"},{"range":"1096","text":"1097"},{"range":"1098","text":"1071"},{"range":"1099","text":"1100"},{"range":"1101","text":"854"},{"range":"1102","text":"834"},{"range":"1103","text":"1104"},"ExportDefaultDeclaration",{"range":"1105","text":"1106"},{"range":"1107","text":"842"},{"range":"1108","text":"917"},{"range":"1109","text":"1110"},{"range":"1111","text":"842"},{"range":"1112","text":"842"},{"range":"1113","text":"836"},{"range":"1114","text":"842"},{"range":"1115","text":"1116"},{"range":"1117","text":"1118"},{"range":"1119","text":"1120"},{"range":"1121","text":"1116"},{"range":"1122","text":"1118"},{"range":"1123","text":"851"},{"range":"1124","text":"824"},{"range":"1125","text":"1126"},{"range":"1127","text":"834"},{"range":"1128","text":"834"},{"range":"1129","text":"939"},{"range":"1130","text":"1131"},{"range":"1132","text":"842"},{"range":"1133","text":"815"},{"range":"1134","text":"834"},{"range":"1135","text":"834"},{"range":"1136","text":"834"},{"range":"1137","text":"834"},{"range":"1138","text":"834"},{"range":"1139","text":"834"},{"range":"1140","text":"815"},{"range":"1141","text":"815"},{"range":"1142","text":"834"},{"range":"1143","text":"842"},{"range":"1144","text":"815"},{"range":"1145","text":"815"},{"range":"1146","text":"1147"},"comma-style","Bad line breaking before and after ','.","unexpectedLineBeforeAndAfterComma",{"range":"1148","text":"1149"},{"range":"1150","text":"834"},{"range":"1151","text":"834"},{"range":"1152","text":"834"},{"range":"1153","text":"834"},{"range":"1154","text":"834"},{"range":"1155","text":"834"},{"range":"1156","text":"834"},{"range":"1157","text":"834"},{"range":"1158","text":"834"},{"range":"1159","text":"834"},{"range":"1160","text":"834"},{"range":"1161","text":"834"},{"range":"1162","text":"834"},"Too many blank lines at the end of file. Max of 0 allowed.","blankEndOfFile",{"range":"1163","text":"834"},{"range":"1164","text":"815"},{"range":"1165","text":"815"},{"range":"1166","text":"834"},{"range":"1167","text":"842"},{"range":"1168","text":"815"},{"range":"1169","text":"815"},{"range":"1170","text":"842"},"'Request' is defined but never used.","'Response' is defined but never used.",{"range":"1171","text":"1172"},{"range":"1173","text":"1174"},{"range":"1175","text":"1176"},{"range":"1177","text":"1178"},{"range":"1179","text":"1180"},{"range":"1181","text":"1182"},{"range":"1183","text":"1184"},{"range":"1185","text":"1186"},{"range":"1187","text":"1188"},{"range":"1189","text":"1190"},{"range":"1191","text":"1174"},{"range":"1192","text":"1193"},{"range":"1194","text":"1174"},{"range":"1195","text":"1196"},{"range":"1197","text":"1198"},{"range":"1199","text":"1200"},{"range":"1201","text":"1202"},"'MailType' is defined but never used.","'OTP' is defined but never used.",{"range":"1203","text":"1204"},"'RESETPW' is defined but never used.",{"range":"1205","text":"1206"},"'VERIFYMAIL' is defined but never used.",{"range":"1207","text":"1208"},{"range":"1209","text":"1210"},{"range":"1211","text":"1212"},{"range":"1213","text":"1214"},{"range":"1215","text":"947"},{"range":"1216","text":"1217"},{"range":"1218","text":"834"},{"range":"1219","text":"834"},{"range":"1220","text":"842"},{"range":"1221","text":"1222"},{"range":"1223","text":"1224"},{"range":"1225","text":"1226"},{"range":"1227","text":"1228"},{"range":"1229","text":"834"},{"range":"1230","text":"842"},{"range":"1231","text":"842"},{"range":"1232","text":"1233"},{"range":"1234","text":"1235"},{"range":"1236","text":"842"},{"range":"1237","text":"1238"},{"range":"1239","text":"1240"},{"range":"1241","text":"1242"},{"range":"1243","text":"1226"},{"range":"1244","text":"1228"},{"range":"1245","text":"842"},{"range":"1246","text":"842"},[745,745]," ",[835,835],[939,969],"'Access-Control-Allow-Headers'",[975,1021],"'x-access-token, Origin, Content-Type, Accept'",[1024,1033],")\n  next",[1034,1038],")\n}",[1038,1044],")\napp",[1138,1138],[1288,1322],"'Welcome to bezkoder application.'",[1324,1328],[1328,1537],")\n\n// User.register(new User(testUser), \"test\", function (err: Error, account) {\n//   if (err) {\n//     console.error(err)\n//     return\n//   }\n//   console.log(\"Successfully created testUser\")\n// })\n\n\nexport",[1529,1530],"",[105,122],"'express'\nimport",[133,157],"'../models/User'\nimport",[168,192],"'../models/Role'\nimport",[523,525],"\n",[827,828],[834,847],")\n\n    const",[928,934],"'USER'",[1047,1082],"'User was registered successfully!'",[1084,1090],")\n  }",[1153,1159],[1160,1169],"}\n\nconst",[1228,1230],[1364,1381],"'User Not found.'",[1383,1391],")\n    }",[1490,1500],")\n\n    if",[1602,1621],"'Invalid Password!'",[1629,1637],[1751,1778],"'OTP successfully created.'",[1882,1950],")\n    //res.cookie('Token ', token, { httpOnly: true });\n    return",[1891,1891],[2080,2087],")\n\n  }",[2082,2084],[2150,2156],[2363,2380],[2382,2390],[2489,2499],[2601,2620],[2628,2636],[2718,2745],[2748,2750],[2816,2822],[3292,3294],[3428,3445],[3447,3455],[3554,3564],[3666,3685],[3693,3701],[3894,3922],"'OTP not found or incorrect'",[4027,4038],")\n\n    otp",[4224,4231],[4226,4228],[4294,4301],[4296,4298],[4301,4303],[4358,4358],[43,60],[71,95],[136,159],"'../lib/errors'\nimport",[183,220],"'../models/ResetUserPassword'\nimport",[235,267],"'../service/mailService'\nimport",[997,998],[1276,1282],[1282,1284],[1562,1563],[1328,1724],"async (req, res) => {\n  if (!req.params.token) {\n    res.status(400).end('Request invalid')\n  }\n  const restPW = await ResetUserPassword.findOne({\n    resetPasswordToken: req.params.token,\n    resetPasswordExpires: { $gt: new Date() },\n  })\n  if (!restPW) {\n    res.status(400).end('Password reset token is invalid or has expired.')\n    return\n  }\n\n  res.status(200).end('Token valid')\n  \n}",[2414,2455],"'New password has been set successfully.'",[2525,2531],[2534,2535],[43,52],"'express'",[43,60],"\"express\"\n\nconst",[147,164],"'Public Content.'",[164,168],[167,176],[265,271],"data","'data'",[273,279],"'user'",[287,291],[290,299],[387,403],"'Admin Content.'",[403,407],[406,415],[507,527],"'Moderator Content.'",[527,531],[530,540],"}\n\nexport",[593,593],[44,61],[72,96],[109,132],[149,180],"'../models/VerifyEmail'\nimport",[244,250],"'test'",[295,313],"'http://localhost'",[447,449],[582,599],[625,633],[773,785],")\n    const",[1018,1043],"'/api/verifyEmail?token='",[1181,1211],"'Email was sent successfully.'",[1382,1412],[1482,1488],[1551,1553],[1663,1679],"'Token missing.'",[1884,1903],"'Request not found'",[1929,1937],[2074,2091],[2117,2125],[2132,2132],[2331,2369],"'Email address successfully verified.'",[2431,2497],"'This request timed out. Please request a new E-mail verifaction.'",[2506,2508],[2574,2580],[2581,2591],[2632,2632],[257,259],[379,391],"'production'",[65,67],[154,160],[160,162],[162,172],[191,191],[210,239],"'Roles are created initially'",[372,378],[423,434],"'MODERATOR'",[475,482],"'ADMIN'",[654,654],[17,33],"'../models/User'",[81,83],[124,138],"'test@User.at'",[155,161],"'Test'",[177,183],"'User'",[199,209],"'testUser'",[221,227],[246,255],"'0123456'",[284,292],"'Vienna'",[332,344],"'Stadtplatz'",[366,369],"'1'",[390,396],"'Top1'",[485,487],[121,126],"'400'",[135,148],"'Bad request'",[191,196],"'404'",[205,225],"'Resource not found'",[272,277],"'401'",[286,310],"'User is not authorized'",[358,363],[372,388],"'Wrong password'",[432,437],"'403'",[446,492],"'User is not allowed to access this resourced'",[541,546],"'500'",[555,578],"'Internal server error'",[625,630],[671,672],[152,152],[217,218],[255,256],[292,293],[349,350],[403,404],[443,444],[493,494],[531,532],[572,573],[619,620],[665,666],[672,673],[677,678],[769,770],[826,827],[831,832],[1258,1259],[16,30],"'jsonwebtoken'",[48,64],[104,113],[104,121],[157,163],[262,282],"authorization\n\n  if",[330,350],"'No token provided!'",[352,365],")\n    return",[519,534],"'Unauthorized!'",[536,544],[570,582],"id\n    next",[583,589],[589,593],[592,601],[776,793],"'User not found!'",[795,808],[802,813],"return\n  }",[836,843],[905,926],"'Require Admin Role!'",[928,941],[612,947],"async (req: any, res: Response, next: NextFunction) => {\n  const IUser = await User.findById(req.userId).exec()\n  if (!IUser) {\n    res.status(500).send({ message: \"User not found!\" });\n    return;\n  }\n\n  if (IUser.role === \"ADMIN\") {\n    next()\n  } else {\n    res.status(403).send({ message: \"Require Admin Role!\" });\n    \n  }\n}",[946,955],[1134,1151],[1153,1166],[1160,1171],[1194,1205],[1267,1292],"'Require Moderator Role!'",[1294,1307],[970,1313],"async (req: any, res: Response, next: NextFunction) => {\n  const IUser = await User.findById(req.userId).exec()\n  if (!IUser) {\n    res.status(500).send({ message: \"User not found!\" });\n    return;\n  }\n\n  if (IUser.role === \"MODERATOR\") {\n    next()\n  } else {\n    res.status(403).send({ message: \"Require Moderator Role!\" });\n    \n  }\n}",[1312,1321],[1373,1374],[1375,1384],"}\nexport",[1393,1401],"authJwt",[1401,1401],[48,57],[77,92],"'../lib/errors'",[173,175],[349,349],[48,65],[186,188],[652,667],")\n      return",[661,674],"return\n    }",[730,764],"'Failed! Email is already in use!'",[766,781],[775,788],[799,805],[805,809],[808,818],"}\n\n\nconst",[811,812],[867,868],[869,879],[888,901],"verifySignUp",[901,901],[275,275],[363,364],[427,428],[502,503],[577,578],[620,621],[627,628],[98,98],[192,192],[330,331],[451,451],[98,98],[484,484],[581,587],"'Role'",[593,604],",    \n    ",[634,635],[678,679],[721,722],[803,804],[876,877],[941,942],[987,988],[1045,1046],[1096,1097],[1143,1144],[1196,1197],[1248,1249],[1257,1258],[1454,1455],[106,106],[262,262],[409,410],[752,752],[105,105],[269,269],[779,779],[642,656],"'/auth/signup'",[709,718],")\nrouter",[724,738],"'/auth/signin'",[760,781],"'/auth/signinWithOTP'",[810,828],"'/auth/requestOTP'",[854,876],"'/pw/reset-pw-request'",[911,931],"'/pw/reset-pw-check'",[970,984],"'/pw/reset-pw'",[1013,1031],"'/mail/verifyMail'",[1056,1067],"'/test/all'",[1078,1087],[1092,1099],"'/user'",[1133,1142],[1150,1161],"'/test/mod'",[1226,1236],")\n\nrouter",[1244,1257],"'/test/admin'",[1314,1324],")\n\nexport",[94,99],"'OTP'",[115,124],"'RESETPW'",[143,155],"'VERIFYMAIL'",[204,220],"'localhost:3000'",[277,295],"'Test Application'",[354,376],"'test@application.com'",[440,446],[514,536],"'mail.teststerver.net'",[920,921],[956,957],[1078,1080],[1215,1257],"'DEVELOPMENT: Email would have been sent.'",[1275,1286],"'Subject: '",[1313,1324],"'Content: '",[1362,1366],"'ok'",[1606,1607],[1680,1682],[1764,1766],[2498,2526],"'/api/reset-password?token='",[3010,3034],"'/api/verifyMail?token='",[103,105],[168,208],"'DEVELOPMENT: SMS would have been sent.'",[226,238],"'Username: '",[266,284],"'receiverNumber: '",[318,329],[430,434],[435,437],[462,462]]